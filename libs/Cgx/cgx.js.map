{"version":3,"file":"cgx.js","sourceRoot":"","sources":["../src/Animator.ts","../src/Brushes.ts","../src/CoreGraphics.ts","../src/BufferedGraphics.ts","../src/GraphicsRenderer.ts","../src/CanvasRenderer.ts","../src/CommonTypes.ts","../src/Ease.ts","../src/Engine.ts","../src/FpsCounter.ts","../src/Geometry.ts","../src/Index.ts","../src/Matrix.ts","../src/RenderLoop.ts","../src/Shapes.ts","../src/Transform.ts","../src/TransformManager.ts","../src/Utils.ts","../src/WebGLRenderer.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nnamespace Cgx {\r\n\r\n    export type AnimatorValue = number | number[] | { [name: string]: number } | Point;\r\n\r\n    export class Animator {\r\n\r\n        private _startValue: AnimatorValue;\r\n        private _endValue: AnimatorValue;\r\n        private _totalTime: number;\r\n        private _ease = \"linear\";\r\n        private _easeFunction: (time: number) => any;\r\n        private _onValueCallback: (value: any) => void;\r\n        private _onCompleted: () => void;\r\n        private _lastTimeStamp: number;\r\n        private _elapsedTime = 0;\r\n        private _frameIndex = 0;\r\n        private _isRunning = false;\r\n        private _isCompleted = false;\r\n        private _inputIsArray = false;\r\n        private _inputIsObject = false;\r\n        private _deltaValue: AnimatorValue = null;\r\n        private _isDeltaDirty = true;\r\n\r\n        constructor(\r\n            startValue: AnimatorValue,\r\n            endValue: AnimatorValue,\r\n            totalTime: number,\r\n            easeFunction: (time: number) => any,\r\n            onValueCallback: (value: AnimatorValue) => void,\r\n            onCompleted: () => void\r\n        ) {\r\n            this._startValue = startValue;\r\n            this._endValue = endValue;\r\n            this._totalTime = totalTime;\r\n            this._easeFunction = easeFunction;\r\n            this._onValueCallback = onValueCallback;\r\n            this._onCompleted = onCompleted;\r\n\r\n            this.reset();\r\n        }\r\n\r\n\r\n        private computeDeltaValue() {\r\n\r\n            if (typeof this._startValue !== typeof this._endValue) {\r\n                throw new Error(\"invalid type, startValue, endValue\");\r\n            }\r\n\r\n            this._inputIsObject = false;\r\n            this._inputIsArray = false;\r\n\r\n            if (this._startValue instanceof Array) {\r\n                this._inputIsArray = true;\r\n\r\n                if (this._startValue.length != (<number[]>this._endValue).length) {\r\n                    throw new Error(\"invalid array length, startValue, endValue\");\r\n                }\r\n                this._deltaValue = (<number[]>this._endValue).map(function (v: number, i: number) {\r\n                    return v - this._startValue[i];\r\n                });\r\n            }\r\n            else if (typeof this._startValue === \"object\") {\r\n                this._inputIsObject = true;\r\n\r\n                this._deltaValue = {};\r\n                for (var n in (<{[name: string]: number}>this._endValue)) {\r\n                    if (this._endValue.hasOwnProperty(n)) {\r\n                        this._deltaValue[n] = (<{ [name: string]: number }>this._endValue)[n] - (<{ [name: string]: number }>this._startValue)[n];\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._deltaValue = <number>this._endValue - this._startValue;\r\n            }\r\n        }\r\n\r\n\r\n        public get startValue() { return this._startValue; }\r\n        public set startValue(v: AnimatorValue) {\r\n            if (this._startValue !== v) {\r\n                this._startValue = v;\r\n                this.reset();\r\n                this._isDeltaDirty = true;\r\n            }\r\n        }\r\n\r\n        public get endValue() { return this._endValue; }\r\n        public set endValue(v: AnimatorValue) {\r\n            if (this._endValue !== v) {\r\n                this._endValue = v;\r\n                this.reset();\r\n                this._isDeltaDirty = true;\r\n            }\r\n        }\r\n\r\n        public get totalTime() { return this._totalTime; }\r\n        public set totalTime(v: number) {\r\n            if (this._totalTime !== v) {\r\n                this.reset();\r\n                this._totalTime = v;\r\n            }\r\n        }\r\n\r\n        public get ease() { return this._ease; }\r\n        public set ease(v: string) {\r\n            if (this._ease !== v) {\r\n                this._ease = v;\r\n                this._easeFunction = Ease.getEasingFunctionOrDefault(this._ease);\r\n            }\r\n        }\r\n\r\n        public get isCompleted() { return this._isCompleted; }\r\n\r\n        public get elapsedTime() { return this._elapsedTime; }\r\n\r\n        public get frameIndex() { return this._frameIndex; }\r\n\r\n\r\n\r\n        public provideValue() {\r\n\r\n            var lt = this._elapsedTime / this._totalTime;\r\n            var lv = this._easeFunction(lt);\r\n\r\n            if (this._inputIsArray) {\r\n                return (<number[]>this._deltaValue).map(function (v: number, i: number) {\r\n                    return (<number[]>this._startValue)[i] + (lv * v);\r\n                });\r\n            }\r\n            else if (this._inputIsObject) {\r\n                var result: { [name: string]: any } = {};\r\n                for (var n in (<{ [name: string]: any }>this._deltaValue)) {\r\n                    if (this._deltaValue.hasOwnProperty(n)) {\r\n                        result[n] = (<{ [name: string]: any }>this._startValue)[n] + (lv *  (<{ [name: string]: any }>this._deltaValue)[n]);\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n            else {\r\n                return <number>this._startValue + (lv * <number>this._deltaValue);\r\n            }\r\n        }\r\n\r\n        public notifyFrame(timeStamp: number) {\r\n            if (this._isRunning) {\r\n                if (!this._lastTimeStamp) {\r\n                    this._lastTimeStamp = timeStamp;\r\n                }\r\n                this._elapsedTime += (timeStamp - this._lastTimeStamp);\r\n                if (this._elapsedTime > this._totalTime) {\r\n                    this.stop();\r\n                    this._isCompleted = true;\r\n                    this._onCompleted();\r\n                    return;\r\n                }\r\n\r\n                this._lastTimeStamp = timeStamp;\r\n                this._frameIndex++;\r\n\r\n                this._onValueCallback(this.provideValue());\r\n            }\r\n        }\r\n\r\n        public start() {\r\n            if (this._isRunning) {\r\n                return;\r\n            }\r\n            if (!this._deltaValue || this._isDeltaDirty) {\r\n                this.computeDeltaValue();\r\n            }\r\n            this._isRunning = true;\r\n        }\r\n\r\n        public stop() {\r\n            if (!this._isRunning) {\r\n                return;\r\n            }\r\n            this._isRunning = false;\r\n        }\r\n\r\n        public restart() {\r\n            this.reset();\r\n            this.start();\r\n        }\r\n\r\n        public reset() {\r\n            if (this._isRunning) {\r\n                this.stop();\r\n            }\r\n            this._lastTimeStamp = null;\r\n            this._elapsedTime = 0;\r\n            this._frameIndex = 0;\r\n            this._isCompleted = false;\r\n        }\r\n    }\r\n\r\n}\r\n","\r\nnamespace Cgx {\r\n\r\n    export type BrushType = \"linear\" | \"radial\" | \"pattern\";\r\n\r\n    export abstract class Brush {\r\n        public readonly abstract brushType: BrushType;\r\n    }\r\n\r\n    export abstract class GradientBrush extends Brush {\r\n        protected _colorStops: Array<{ offset: number, color: string }> = [];\r\n        public addColorStop(offset: number, color: string) {\r\n            this._colorStops.push({ offset, color });\r\n        }\r\n        public getColorStops() {\r\n            return this._colorStops.slice(0);\r\n        }\r\n    }\r\n\r\n    export class LinearGradientBrush extends GradientBrush {\r\n        public readonly brushType: BrushType = \"linear\";\r\n        public x0 = 0;\r\n        public y0 = 0;\r\n        public x1 = 100;\r\n        public y1 = 100;\r\n    }\r\n\r\n    export class RadialGradientBrush extends GradientBrush {\r\n        public readonly brushType: BrushType = \"radial\";\r\n        public x0 = 0;\r\n        public y0 = 0;\r\n        public r0 = 0;\r\n        public x1 = 100;\r\n        public y1 = 100;\r\n        public r1 = 0;\r\n    }\r\n\r\n    export class PatternBrush extends Brush {\r\n        public readonly brushType: BrushType = \"pattern\";\r\n        public image: HTMLImageElement = null;\r\n        public repetition = \"repeat\";\r\n    }\r\n}","\r\nnamespace Cgx {\r\n\r\n    export type CanvasSurface = HTMLCanvasElement | OffscreenCanvas;\r\n\r\n    export type GraphicsTarget = CanvasSurface | GraphicsRenderer;\r\n\r\n    export class CoreGraphics {\r\n\r\n        private _canvasBuffer: CanvasSurface;\r\n        private _renderer: GraphicsRenderer;\r\n        private _transformManager: TransformManager;\r\n        private _fill: BrushDefinition = 0xffffffff;\r\n        private _stroke: BrushDefinition = 0xff000000;\r\n        private _strokeWidth = 1;\r\n        private _shadow: Shadow;\r\n        private _textLineHeight = \"1.5em\";\r\n        private _fontWeight = \"normal\";\r\n        private _fontStyle = \"normal\";\r\n        private _fontSize = \"16px\";\r\n        private _fontFamily = \"sans-serif\";\r\n        private _textAlign: CanvasTextAlign = \"left\";\r\n        private _textBaseline: CanvasTextBaseline = \"bottom\";\r\n        private readonly FULL_ANGLE = 2 * Math.PI;\r\n\r\n\r\n        constructor(target: GraphicsTarget) {\r\n            if (target instanceof GraphicsRenderer) {\r\n                this._renderer = target;\r\n                this._canvasBuffer = this._renderer.canvas;\r\n            } else {\r\n                this._canvasBuffer = target;\r\n                this._renderer = Engine.createDefaultRenderer(this._canvasBuffer);\r\n            }\r\n\r\n            this._transformManager = new TransformManager(this._renderer);\r\n        }\r\n\r\n\r\n        private applyEntityTransform(transform: Transform, insertPointX: number, insertPointY: number) {\r\n\r\n            // move to entity insert point\r\n            this._renderer.translate(insertPointX, insertPointY);\r\n\r\n            var mtx;\r\n\r\n            if (transform) {\r\n\r\n                // move to transform origin\r\n                this._renderer.translate(transform.originX, transform.originY);\r\n\r\n                mtx = transform.getMatrix();\r\n                // apply matrix transform to the renderer\r\n                this._renderer.transform(mtx.m11, mtx.m12, mtx.m21, mtx.m22, mtx.offsetX, mtx.offsetY);\r\n\r\n                // back transform origin\r\n                this._renderer.translate(-transform.originX, -transform.originY);\r\n            }\r\n\r\n            // back from entity insert point\r\n            this._renderer.translate(-insertPointX, -insertPointY);\r\n        }\r\n\r\n        private createCanvasColorOrBrush(value: BrushDefinition) {\r\n\r\n            if (typeof (value) === \"number\") {\r\n                return \"#\" + value.toString(16);\r\n            }\r\n            else if (typeof (value) === \"string\") {\r\n                return value;\r\n            }\r\n            else if (value instanceof Array) { // [r,g,b,a] | [r,g,b]\r\n                if (value.length == 3) {\r\n                    return \"rgb(\" + value.join(\",\") + \")\";\r\n                }\r\n                else if (value.length == 4) {\r\n                    return \"rgba(\" + value.join(\",\") + \")\";\r\n                }\r\n                else {\r\n                    throw new Error(\"invalid length\");\r\n                }\r\n            }\r\n            else if (value instanceof GradientBrush) {\r\n\r\n                var result;\r\n\r\n                if (value instanceof LinearGradientBrush) {\r\n                    result = this._renderer.createLinearGradient(value.x0, value.y0, value.x1, value.y1);\r\n                }\r\n                else if (value instanceof RadialGradientBrush) {\r\n                    result = this._renderer.createRadialGradient(value.x0, value.y0, value.r0, value.x1, value.y1, value.r1);\r\n                }\r\n\r\n                var colorStops = value.getColorStops();\r\n                for (var i = 0; i < colorStops.length; i++) {\r\n                    result.addColorStop(colorStops[i].offset, colorStops[i].color);\r\n                }\r\n\r\n                return result;\r\n            }\r\n            else if (value instanceof PatternBrush) {\r\n                return this._renderer.createPattern(value.image, value.repetition);\r\n            }\r\n\r\n            return value;\r\n        }\r\n\r\n\r\n        public get canvasBuffer() {\r\n            return this._canvasBuffer;\r\n        }\r\n\r\n        public get renderer() {\r\n            return this._renderer;\r\n        }\r\n\r\n        public get shadow() {\r\n            return this._shadow;\r\n        }\r\n        public set shadow(v: Shadow) {\r\n            this._shadow = v;\r\n            // TODO:\r\n            //if (!!this.scaleStyles) {\r\n            //    _shadow = shadow.clone();\r\n            //    _shadow.blur *= _viewTransform.viewZoom;\r\n            //    _shadow.offsetX *= _viewTransform.viewZoom;\r\n            //    _shadow.offsetY *= _viewTransform.viewZoom;\r\n            //}\r\n            if (v) {\r\n                this._renderer.shadowBlur = v.blur;\r\n                this._renderer.shadowOffsetX = v.offsetX;\r\n                this._renderer.shadowOffsetY = v.offsetY;\r\n                this._renderer.shadowColor = v.color;\r\n            } else {\r\n                this._renderer.shadowBlur = 0;\r\n                this._renderer.shadowOffsetX = 0;\r\n                this._renderer.shadowOffsetY = 0;\r\n                this._renderer.shadowColor = \"transparent\";\r\n            }\r\n        }\r\n\r\n        public get fillBrush() {\r\n            return this._fill;\r\n        }\r\n        public set fillBrush(v: BrushDefinition) {\r\n            this._fill = v;\r\n            this._renderer.fillStyle = this.createCanvasColorOrBrush(v);\r\n        }\r\n\r\n        public get strokeBrush() {\r\n            return this._stroke;\r\n        }\r\n        public set strokeBrush(v: BrushDefinition) {\r\n            this._stroke = v;\r\n            this._renderer.strokeStyle = this.createCanvasColorOrBrush(v);\r\n        }\r\n\r\n        public get strokeWidth() {\r\n            return this._strokeWidth;\r\n        }\r\n        public set strokeWidth(v: number) {\r\n            this._strokeWidth = v;\r\n            this._renderer.lineWidth = v;\r\n        }\r\n\r\n        public get fontFamily() {\r\n            return this._fontFamily;\r\n        }\r\n        public set fontFamily(v: string) {\r\n            this._fontFamily = v;\r\n            this._renderer.fontFamily = v;\r\n        }\r\n\r\n        public get textLineHeight() {\r\n            return this._textLineHeight;\r\n        }\r\n        public set textLineHeight(v: string) {\r\n            this._textLineHeight = v;\r\n            this._renderer.textLineHeight = v;\r\n        }\r\n\r\n        public get fontSize() {\r\n            return this._fontSize;\r\n        }\r\n        public set fontSize(v: string) {\r\n            this._fontSize = v;\r\n            this._renderer.fontSize = v;\r\n        }\r\n\r\n        public get fontStyle() {\r\n            return this._fontStyle;\r\n        }\r\n        public set fontStyle(v: string) {\r\n            this._fontStyle = v;\r\n            this._renderer.fontStyle = v;\r\n        }\r\n\r\n        public get fontWeight() {\r\n            return this._fontWeight;\r\n        }\r\n        public set fontWeight(v: string) {\r\n            this._fontWeight = v;\r\n            this._renderer.fontWeight = v;\r\n        }\r\n\r\n        public get textAlign() {\r\n            return this._textAlign;\r\n        }\r\n        public set textAlign(v: CanvasTextAlign) {\r\n            this._textAlign = v;\r\n            this._renderer.textAlign = v;\r\n        }\r\n\r\n        public get textBaseline() {\r\n            return this._textBaseline;\r\n        }\r\n        public set textBaseline(v: CanvasTextBaseline) {\r\n            this._textBaseline = v;\r\n            this._renderer.textBaseline = v;\r\n        }\r\n\r\n\r\n        public getImageData(sx: number, sy: number, sw: number, sh: number) {\r\n            return this._renderer.getImageData(sx, sy, sw, sh);\r\n        }\r\n\r\n        public putImageData(imageData: ImageData, x: number, y: number) {\r\n            return this._renderer.putImageData(imageData, x, y);\r\n        }\r\n\r\n        public getDataURL(type?: string, quality?: any) {\r\n            return this._renderer.toDataURL(type, quality);\r\n        }\r\n\r\n        public pushTransform(transform: ITransform) {\r\n            this._transformManager.push(transform);\r\n        }\r\n\r\n        public popTransform() {\r\n            this._transformManager.pop();\r\n        }\r\n\r\n\r\n\r\n        public measureText(text: string) {\r\n            return this._renderer.measureText(text);\r\n        }\r\n\r\n        public clear(fillBrush?: BrushDefinition) {\r\n            this.clearRect(0, 0, this._renderer.canvas.width, this._renderer.canvas.height, fillBrush);\r\n        }\r\n\r\n        public clearRect(x: number, y: number, width: number, height: number, fillBrush?: BrushDefinition) {\r\n            var fillStyle = null;\r\n            if (typeof fillBrush !== \"undefined\" && fillBrush !== null) {\r\n                fillStyle = this.createCanvasColorOrBrush(fillBrush);\r\n            }\r\n            this._renderer.clearRect(x, y, width, height, fillStyle);\r\n        }\r\n\r\n\t\tpublic clipRect(x: number, y: number, width: number, height: number) {\r\n\t\t\tthis._renderer.beginPath();\r\n\t\t\tthis._renderer.rect(x, y, width, height);\r\n\t\t\tthis._renderer.clip();\r\n\t\t}\r\n\r\n        public drawArc(cx: number, cy: number, radius: number, startAngle: number, endAngle: number, isAntiClockwise: boolean, transform?: Transform) {\r\n\r\n            if (!this._stroke || this._strokeWidth == 0)\r\n                return;\r\n\r\n            this._renderer.saveState();\r\n\r\n            // apply entity transform\r\n            this.applyEntityTransform(transform, cx, cy);\r\n\r\n            this._renderer.beginPath();\r\n            this._renderer.arc(cx, cy, radius, 0, startAngle, endAngle, !!isAntiClockwise);\r\n            this._renderer.stroke();\r\n\r\n            this._renderer.restoreState();\r\n        }\r\n\r\n        public drawLine(x1: number, y1: number, x2: number, y2: number, transform?: Transform) {\r\n\r\n            if (!this._stroke || this._strokeWidth == 0)\r\n                return;\r\n\r\n            this._renderer.saveState();\r\n\r\n            // apply entity transform\r\n            this.applyEntityTransform(transform, x1, y1);\r\n\r\n            this._renderer.beginPath();\r\n            this._renderer.moveTo(x1, y1);\r\n            this._renderer.lineTo(x2, y2);\r\n\r\n            this._renderer.stroke();\r\n\r\n            this._renderer.restoreState();\r\n        }\r\n\r\n        public drawRoundedRectangle(x: number, y: number, width: number, height: number, cornersRadius: CornersRadiusDefinition, transform?: Transform) {\r\n\r\n            if (!this._fill && (!this._stroke || this._strokeWidth == 0))\r\n                return;\r\n\r\n            var topLeftCorner = 0;\r\n            var topRightCorner = 0;\r\n            var bottomLeftCorner = 0;\r\n            var bottomRightCorner = 0;\r\n            if (cornersRadius instanceof Array) {\r\n                topLeftCorner = cornersRadius[0];\r\n                topRightCorner = cornersRadius[0];\r\n                bottomLeftCorner = cornersRadius[0];\r\n                bottomRightCorner = cornersRadius[0];\r\n            }\r\n            else if (typeof cornersRadius === \"number\") {\r\n                topLeftCorner = topRightCorner = bottomLeftCorner = bottomRightCorner = cornersRadius;\r\n            }\r\n            else if (typeof cornersRadius === \"object\") {\r\n                topLeftCorner = cornersRadius.topLeft;\r\n                topRightCorner = cornersRadius.topRight;\r\n                bottomLeftCorner = cornersRadius.bottomLeft;\r\n                bottomRightCorner = cornersRadius.bottomRight;\r\n            }\r\n\r\n            this._renderer.saveState();\r\n\r\n            // apply entity transform\r\n            this.applyEntityTransform(transform, x, y);\r\n\r\n            this._renderer.beginPath();\r\n\r\n            var currentX = x;\r\n            var currentY = y;\r\n\r\n            if (topLeftCorner == 0) {\r\n                this._renderer.moveTo(currentX, currentY);\r\n            } else {\r\n                this._renderer.moveTo(currentX + topLeftCorner, currentY);\r\n            }\r\n\r\n            currentX = x + width;\r\n            if (topRightCorner == 0) {\r\n                this._renderer.lineTo(currentX, currentY);\r\n            } else {\r\n                this._renderer.lineTo(currentX - topRightCorner, currentY);\r\n                this._renderer.arcTo(currentX, currentY, currentX, currentY + topRightCorner, topRightCorner);\r\n            }\r\n\r\n            currentY = y + height;\r\n            if (bottomRightCorner == 0) {\r\n                this._renderer.lineTo(currentX, currentY);\r\n            } else {\r\n                this._renderer.lineTo(currentX, currentY - bottomRightCorner);\r\n                this._renderer.arcTo(currentX, currentY, currentX - bottomRightCorner, currentY, bottomRightCorner);\r\n            }\r\n\r\n            currentX = x;\r\n            if (bottomLeftCorner == 0) {\r\n                this._renderer.lineTo(currentX, currentY);\r\n            } else {\r\n                this._renderer.lineTo(currentX + bottomLeftCorner, currentY);\r\n                this._renderer.arcTo(currentX, currentY, currentX, currentY - bottomLeftCorner, bottomLeftCorner);\r\n            }\r\n\r\n            currentY = y;\r\n            if (topLeftCorner == 0) {\r\n                this._renderer.lineTo(currentX, currentY);\r\n            } else {\r\n                this._renderer.lineTo(currentX, currentY + topLeftCorner);\r\n                this._renderer.arcTo(currentX, currentY, currentX + topRightCorner, currentY, topLeftCorner);\r\n            }\r\n\r\n            this._renderer.closePath();\r\n\r\n            if (this._fill)\r\n                this._renderer.fill();\r\n            if (this._stroke && this._strokeWidth > 0)\r\n                this._renderer.stroke();\r\n\r\n            this._renderer.restoreState();\r\n        }\r\n\r\n        public drawSquare(x: number, y: number, size: number, transform?: Transform) {\r\n\r\n            if (!this._fill && (!this._stroke || this._strokeWidth == 0))\r\n                return;\r\n\r\n            this._renderer.saveState();\r\n\r\n            // apply entity transform\r\n            this.applyEntityTransform(transform, x, y);\r\n\r\n            this._renderer.beginPath();\r\n            this._renderer.square(x, y, size);\r\n\r\n            if (this._fill)\r\n                this._renderer.fill();\r\n            if (this._stroke && this._strokeWidth > 0)\r\n                this._renderer.stroke();\r\n\r\n            this._renderer.restoreState();\r\n        }\r\n\r\n        public drawRectangle(x: number, y: number, width: number, height: number, transform?: Transform) {\r\n\r\n            if (!this._fill && (!this._stroke || this._strokeWidth == 0))\r\n                return;\r\n\r\n            this._renderer.saveState();\r\n\r\n            // apply entity transform\r\n            this.applyEntityTransform(transform, x, y);\r\n\r\n            this._renderer.beginPath();\r\n            this._renderer.rect(x, y, width, height);\r\n\r\n            if (this._fill)\r\n                this._renderer.fill();\r\n            if (this._stroke && this._strokeWidth > 0)\r\n                this._renderer.stroke();\r\n\r\n            this._renderer.restoreState();\r\n        }\r\n\r\n        public drawCircle(cx: number, cy: number, radius: number, transform?: Transform) {\r\n\r\n            if (!this._fill && (!this._stroke || this._strokeWidth == 0))\r\n                return;\r\n\r\n            this._renderer.saveState();\r\n\r\n            // apply entity transform\r\n            this.applyEntityTransform(transform, cx, cy);\r\n\r\n            this._renderer.beginPath();\r\n            this._renderer.circle(cx, cy, radius);\r\n\r\n            //if (\"ellipse\" in this._renderer) {\r\n            //    this._renderer.ellipse(cx, cy, radius, radius);\r\n            //}\r\n            //else if (\"arc\" in this._renderer) {\r\n            //    this._renderer.arc(cx, cy, radius, 0, FULL_ANGLE, false);\r\n            //}\r\n            //else {\r\n            //    var halfRadius = radius * 0.545; // TODO: cercare un metodo migliore\r\n            //    var ql = cx - halfRadius;\r\n            //    var qt = cy - halfRadius;\r\n            //    var qr = cx + halfRadius;\r\n            //    var qb = cy + halfRadius;\r\n            //    var pA = { x: cx, y: cx + radius };\r\n            //    var pB = { x: cx + radius, y: cy };\r\n            //    var pC = { x: cx, y: cy - radius };\r\n            //    var pD = { x: cx - radius, y: cy };\r\n            //    var c1B = { x: qr, y: pA.y };\r\n            //    var c2B = { x: pB.x, y: qb };\r\n            //    var c1C = { x: pB.x, y: qt };\r\n            //    var c2C = { x: qr, y: pC.y };\r\n            //    var c1D = { x: ql, y: pC.y };\r\n            //    var c2D = { x: pD.x, y: qt };\r\n            //    var c1A = { x: pD.x, y: qb };\r\n            //    var c2A = { x: ql, y: pA.y };\r\n            //    this._renderer.moveTo(pA.x, pA.y);\r\n            //    this._renderer.bezierCurveTo(c1B.x, c1B.y, c2B.x, c2B.y, pB.x, pB.y);\r\n            //    this._renderer.bezierCurveTo(c1C.x, c1C.y, c2C.x, c2C.y, pC.x, pC.y);\r\n            //    this._renderer.bezierCurveTo(c1D.x, c1D.y, c2D.x, c2D.y, pD.x, pD.y);\r\n            //    this._renderer.bezierCurveTo(c1A.x, c1A.y, c2A.x, c2A.y, pA.x, pA.y);\r\n            //    this._renderer.closePath();\r\n            //}\r\n\r\n            if (this._fill)\r\n                this._renderer.fill();\r\n            if (this._stroke && this._strokeWidth > 0)\r\n                this._renderer.stroke();\r\n\r\n            this._renderer.restoreState();\r\n        }\r\n\r\n        public drawEllipse(cx: number, cy: number, radiusX: number, radiusY: number, transform?: Transform) {\r\n\r\n            if (!this._fill && (!this._stroke || this._strokeWidth == 0))\r\n                return;\r\n\r\n            this._renderer.saveState();\r\n\r\n            // apply entity transform\r\n            this.applyEntityTransform(transform, cx, cy);\r\n\r\n            this._renderer.beginPath();\r\n            this._renderer.ellipse(cx, cy, radiusX, radiusY);\r\n\r\n            //if (\"ellipse\" in this._renderer) {\r\n            //    this._renderer.ellipse(cx, cy, radiusX, radiusY);\r\n            //}\r\n            //else {\r\n            //    var halfRadiusX = radiusX * 0.545; // TODO: cercare un metodo migliore\r\n            //    var halfRadiusY = radiusY * 0.545; // TODO: cercare un metodo migliore\r\n            //    var ql = cx - halfRadiusX;\r\n            //    var qt = cy - halfRadiusY;\r\n            //    var qr = cx + halfRadiusX;\r\n            //    var qb = cy + halfRadiusY;\r\n            //    var pA = { x: cx, y: cy + radiusY };\r\n            //    var pB = { x: cx + radiusX, y: cy };\r\n            //    var pC = { x: cx, y: cy - radiusY };\r\n            //    var pD = { x: cx - radiusX, y: cy };\r\n            //    var c1B = { x: qr, y: pA.y };\r\n            //    var c2B = { x: pB.x, y: qb };\r\n            //    var c1C = { x: pB.x, y: qt };\r\n            //    var c2C = { x: qr, y: pC.y };\r\n            //    var c1D = { x: ql, y: pC.y };\r\n            //    var c2D = { x: pD.x, y: qt };\r\n            //    var c1A = { x: pD.x, y: qb };\r\n            //    var c2A = { x: ql, y: pA.y };\r\n            //    //this._renderer.rect(cx - radiusX, cy - radiusY, radiusX * 2, radiusY * 2);\r\n            //    this._renderer.moveTo(pA.x, pA.y);\r\n            //    this._renderer.bezierCurveTo(c1B.x, c1B.y, c2B.x, c2B.y, pB.x, pB.y);\r\n            //    this._renderer.bezierCurveTo(c1C.x, c1C.y, c2C.x, c2C.y, pC.x, pC.y);\r\n            //    this._renderer.bezierCurveTo(c1D.x, c1D.y, c2D.x, c2D.y, pD.x, pD.y);\r\n            //    this._renderer.bezierCurveTo(c1A.x, c1A.y, c2A.x, c2A.y, pA.x, pA.y);\r\n            //    this._renderer.closePath();\r\n            //}\r\n\r\n            if (this._fill)\r\n                this._renderer.fill();\r\n            if (this._stroke && this._strokeWidth > 0)\r\n                this._renderer.stroke();\r\n\r\n            this._renderer.restoreState();\r\n        }\r\n\r\n        public drawPolyline(points: Point[], transform?: Transform) {\r\n\r\n            if (!this._stroke || this._strokeWidth == 0)\r\n                return;\r\n\r\n            var p0x = points[0].x;\r\n            var p0y = points[0].y;\r\n\r\n            this._renderer.saveState();\r\n\r\n            // apply entity transform\r\n            this.applyEntityTransform(transform, p0x, p0y);\r\n\r\n            this._renderer.beginPath();\r\n            this._renderer.moveTo(p0x, p0y);\r\n            for (var i = 1; i < points.length; i++) {\r\n                var p = points[i];\r\n                this._renderer.lineTo(p.x, p.y);\r\n            }\r\n            this._renderer.stroke();\r\n\r\n            this._renderer.restoreState();\r\n        }\r\n\r\n        public drawPolygon(points: Point[], transform?: Transform) {\r\n\r\n            if (!this._fill && (!this._stroke || this._strokeWidth == 0))\r\n                return;\r\n\r\n            var p0x = points[0].x;\r\n            var p0y = points[0].y;\r\n\r\n            this._renderer.saveState();\r\n\r\n            // apply entity transform\r\n            this.applyEntityTransform(transform, p0x, p0y);\r\n\r\n            this._renderer.beginPath();\r\n            this._renderer.moveTo(p0x, p0y);\r\n            for (var i = 1; i < points.length; i++) {\r\n                var p = points[i];\r\n                this._renderer.lineTo(p.x, p.y);\r\n            }\r\n            this._renderer.closePath();\r\n\r\n            if (this._fill)\r\n                this._renderer.fill();\r\n            if (this._stroke && this._strokeWidth > 0)\r\n                this._renderer.stroke();\r\n\r\n            this._renderer.restoreState();\r\n        }\r\n\r\n        public drawTriangle(point1: Point, point2: Point, point3: Point, transform?: Transform) {\r\n\r\n            if (!this._fill && (!this._stroke || this._strokeWidth == 0))\r\n                return;\r\n\r\n            this._renderer.saveState();\r\n\r\n            // apply entity transform\r\n            this.applyEntityTransform(transform, point1.x, point1.y);\r\n\r\n            this._renderer.beginPath();\r\n            this._renderer.moveTo(point1.x, point1.y);\r\n            this._renderer.lineTo(point2.x, point2.y);\r\n            this._renderer.lineTo(point3.x, point3.y);\r\n            this._renderer.closePath();\r\n\r\n            if (this._fill)\r\n                this._renderer.fill();\r\n            if (this._stroke && this._strokeWidth > 0)\r\n                this._renderer.stroke();\r\n\r\n            this._renderer.restoreState();\r\n        }\r\n\r\n        public drawQuad(point1: Point, point2: Point, point3: Point, point4: Point, transform?: Transform) {\r\n\r\n            if (!this._fill && (!this._stroke || this._strokeWidth == 0))\r\n                return;\r\n\r\n            this._renderer.saveState();\r\n\r\n            // apply entity transform\r\n            this.applyEntityTransform(transform, point1.x, point1.y);\r\n\r\n            this._renderer.beginPath();\r\n            this._renderer.moveTo(point1.x, point1.y);\r\n            this._renderer.lineTo(point2.x, point2.y);\r\n            this._renderer.lineTo(point3.x, point3.y);\r\n            this._renderer.lineTo(point4.x, point4.y);\r\n            this._renderer.closePath();\r\n\r\n            if (this._fill)\r\n                this._renderer.fill();\r\n            if (this._stroke && this._strokeWidth > 0)\r\n                this._renderer.stroke();\r\n\r\n            this._renderer.restoreState();\r\n        }\r\n\r\n        public drawCubicCurve(points: Point[], controlPoints1: Point[], controlPoints2: Point[], isClosed: boolean, transform?: Transform) {\r\n\r\n            if (!this._fill && (!this._stroke || this._strokeWidth == 0))\r\n                return;\r\n\r\n            var p0x = points[0].x;\r\n            var p0y = points[0].y;\r\n\r\n            this._renderer.saveState();\r\n\r\n            // apply entity transform\r\n            this.applyEntityTransform(transform, p0x, p0y);\r\n\r\n            points.push(points[0]);\r\n\r\n            this._renderer.beginPath();\r\n            this._renderer.moveTo(p0x, p0y);\r\n            for (var i = 0; i < controlPoints1.length; i++) {\r\n                var c1 = controlPoints1[i];\r\n                var c2 = controlPoints2[i];\r\n                var p = points[i + 1];\r\n                this._renderer.bezierCurveTo(c1.x, c1.y, c2.x, c2.y, p.x, p.y);\r\n            }\r\n\r\n            if (isClosed)\r\n                this._renderer.closePath();\r\n\r\n            if (this._fill)\r\n                this._renderer.fill();\r\n            if (this._stroke && this._strokeWidth > 0)\r\n                this._renderer.stroke();\r\n\r\n            this._renderer.restoreState();\r\n        }\r\n\r\n        public drawQuadraticCurve(points: Point[], controlPoints: Point[], isClosed: boolean, transform?: Transform) {\r\n\r\n            if (!this._fill && (!this._stroke || this._strokeWidth == 0))\r\n                return;\r\n\r\n            var p0x = points[0].x;\r\n            var p0y = points[0].y;\r\n\r\n            this._renderer.saveState();\r\n\r\n            // apply entity transform\r\n            this.applyEntityTransform(transform, p0x, p0y);\r\n\r\n            points.push(points[0]);\r\n\r\n            this._renderer.beginPath();\r\n            this._renderer.moveTo(p0x, p0y);\r\n            for (var i = 0; i < controlPoints.length; i++) {\r\n                var c1 = controlPoints[i];\r\n                var p = points[i + 1];\r\n                this._renderer.quadraticCurveTo(c1.x, c1.y, p.x, p.y);\r\n            }\r\n\r\n            if (isClosed)\r\n                this._renderer.closePath();\r\n\r\n            if (this._fill)\r\n                this._renderer.fill();\r\n            if (this._stroke && this._strokeWidth > 0)\r\n                this._renderer.stroke();\r\n\r\n            this._renderer.restoreState();\r\n        }\r\n\r\n        public drawImage(image: CanvasImageSource, x: number, y: number, width: number, height: number, transform?: Transform) {\r\n\r\n            if (!image && (!this._stroke || this._strokeWidth == 0))\r\n                return;\r\n\r\n            this._renderer.saveState();\r\n\r\n            // apply entity transform\r\n            this.applyEntityTransform(transform, x, y);\r\n\r\n            this._renderer.drawImage(image, x, y, width, height);\r\n            if (this._stroke && this._strokeWidth > 0) {\r\n                this._renderer.beginPath();\r\n                this._renderer.rect(x, y, width, height);\r\n                this._renderer.stroke();\r\n            }\r\n\r\n            this._renderer.restoreState();\r\n        }\r\n\r\n        public drawText(x: number, y: number, text: string, transform?: Transform) {\r\n\r\n            if (!this._fill && (!this._stroke || this._strokeWidth == 0))\r\n                return;\r\n\r\n            this._renderer.saveState();\r\n\r\n            // apply entity transform\r\n            this.applyEntityTransform(transform, x, y);\r\n\r\n            if (this._fill)\r\n                this._renderer.fillText(text, x, y);\r\n            if (this._stroke && this._strokeWidth > 0)\r\n                this._renderer.strokeText(text, x, y);\r\n\r\n            this._renderer.restoreState();\r\n        }\r\n\r\n        public drawPath2D(x: number, y: number, path2D: Path2D, fillRule?: CanvasFillRule, transform?: Transform) {\r\n\r\n            if (!this._fill && (!this._stroke || this._strokeWidth == 0))\r\n                return;\r\n\r\n            this._renderer.saveState();\r\n\r\n            // apply entity transform\r\n            this.applyEntityTransform(transform, x, y);\r\n\r\n            // move to path2D insert point\r\n            this._renderer.translate(x, y);\r\n\r\n            if (this._fill)\r\n                this._renderer.fillPath2D(path2D, fillRule);\r\n            if (this._stroke && this._strokeWidth > 0)\r\n                this._renderer.strokePath2D(path2D);\r\n\r\n            this._renderer.restoreState();\r\n        }\r\n\r\n        public drawPie(cx: number, cy: number, radius: number, startAngle: number, endAngle: number, isAntiClockwise?: boolean, transform?: Transform) {\r\n\r\n            if (!this._fill && (!this._stroke || this._strokeWidth == 0))\r\n                return;\r\n\r\n            var deltaAngle = endAngle - startAngle;\r\n            if (deltaAngle >= this.FULL_ANGLE) {\r\n                this.drawCircle(cx, cy, radius, transform);\r\n                return;\r\n            }\r\n\r\n            this._renderer.saveState();\r\n\r\n            // apply entity transform\r\n            this.applyEntityTransform(transform, cx, cy);\r\n\r\n            this._renderer.beginPath();\r\n            this._renderer.moveTo(cx, cy);\r\n            this._renderer.arc(cx, cy, radius, 0, startAngle, endAngle, !!isAntiClockwise);\r\n            this._renderer.closePath();\r\n\r\n            if (this._fill)\r\n                this._renderer.fill();\r\n            if (this._stroke && this._strokeWidth > 0)\r\n                this._renderer.stroke();\r\n\r\n            this._renderer.restoreState();\r\n        }\r\n\r\n        public drawDonut(cx: number, cy: number, startRadius: number, endRadius: number, startAngle: number, endAngle: number, isAntiClockwise?: boolean, transform?: Transform) {\r\n\r\n            if (!this._fill && (!this._stroke || this._strokeWidth == 0))\r\n                return;\r\n\r\n            var hasHole = true;\r\n            var isClosed = false;\r\n\r\n            if (startRadius > endRadius) {\r\n                var temp = endRadius;\r\n                endRadius = startRadius;\r\n                startRadius = temp;\r\n            }\r\n\r\n            if (startRadius <= 0) {\r\n                hasHole = false;\r\n                //this.drawPie(cx, cy, endRadius, startAngle, endAngle);\r\n                //return;\r\n            }\r\n\r\n            var deltaAngle = endAngle - startAngle;\r\n            if (deltaAngle >= this.FULL_ANGLE) {\r\n                isClosed = true;\r\n                //this.drawCircle(cx, cy, radius, optTransform);\r\n                //return;\r\n            }\r\n\r\n            if (!hasHole) {\r\n\r\n                if (isClosed) {\r\n                    this.drawCircle(cx, cy, endRadius, transform);\r\n                    return;\r\n                }\r\n                else {\r\n                    this.drawPie(cx, cy, endRadius, startAngle, endAngle, false, transform);\r\n                    return;\r\n                }\r\n            }\r\n\r\n\r\n            this._renderer.saveState();\r\n\r\n            // apply entity transform\r\n            this.applyEntityTransform(transform, cx, cy);\r\n\r\n            this._renderer.beginPath();\r\n\r\n            if (isClosed) {\r\n                this._renderer.circle(cx, cy, endRadius);\r\n                this._renderer.circle(cx, cy, startRadius);\r\n            }\r\n            else {\r\n                this._renderer.arc(cx, cy, endRadius, 0, startAngle, endAngle, !!isAntiClockwise);\r\n                this._renderer.arc(cx, cy, startRadius, 0, endAngle, startAngle, !isAntiClockwise);\r\n                this._renderer.closePath();\r\n            }\r\n\r\n            if (this._fill)\r\n                this._renderer.fill(\"evenodd\");\r\n            if (this._stroke && this._strokeWidth > 0)\r\n                this._renderer.stroke();\r\n\r\n            this._renderer.restoreState();\r\n        }\r\n\r\n\r\n        public drawSymbol(x: number, y: number, width: number, height: number, symbolData: CanvasImageSource) {\r\n\r\n            this._renderer.saveState();\r\n\r\n            if (!symbolData && (!this._stroke || this._strokeWidth == 0))\r\n                return;\r\n            this._renderer.drawImage(symbolData, x, y, width, height);\r\n\r\n            this._renderer.restoreState();\r\n        }\r\n    }\r\n}\r\n","\r\n/// <reference path=\"CoreGraphics.ts\" />\r\n\r\nnamespace Cgx {\r\n\r\n    export class BufferedGraphics extends CoreGraphics {\r\n\r\n        constructor(target: GraphicsTarget) {\r\n            super(target);\r\n        }\r\n\r\n        public commitTo(canvas: HTMLCanvasElement): void;\r\n        public commitTo(bitmapRenderer: ImageBitmapRenderingContext): void;\r\n        public commitTo(canvasOrBitmapRenderer: HTMLCanvasElement | ImageBitmapRenderingContext): void {\r\n            let bitmap = (<OffscreenCanvas>this.canvasBuffer).transferToImageBitmap();\r\n            let bitmapRenderer: ImageBitmapRenderingContext;\r\n            if (canvasOrBitmapRenderer instanceof HTMLCanvasElement) {\r\n                bitmapRenderer = canvasOrBitmapRenderer.getContext(\"bitmaprenderer\");\r\n            } else {\r\n                bitmapRenderer = canvasOrBitmapRenderer;\r\n            }\r\n            bitmapRenderer.transferFromImageBitmap(bitmap);\r\n        }\r\n\r\n        public convertToBlob(type?: string, quality?: any): Promise<Blob> {\r\n            return (<OffscreenCanvas>this.canvasBuffer).convertToBlob({\r\n                type,\r\n                quality\r\n            });\r\n        }\r\n\r\n        public convertToObjectURL(type?: string, quality?: any) {\r\n            return this.convertToBlob(type, quality)\r\n                .then(res => {\r\n                    return URL.createObjectURL(res);\r\n                });\r\n        }\r\n    }\r\n}","\r\nnamespace Cgx {\r\n\r\n    export interface GraphicsRendererSupport {\r\n        [name: string]: boolean;\r\n    }\r\n\r\n    export type RendererBrush = string | CanvasGradient | CanvasPattern;\r\n\r\n    export abstract class GraphicsRenderer {\r\n\r\n        public static readonly support: GraphicsRendererSupport = (() => {\r\n            return {\r\n                // TODO\r\n            };\r\n        })();\r\n\r\n        public static readonly defaultValues = {\r\n            get globalAlpha() { return 1.0; },\r\n            get globalCompositeOperation() { return \"source-over\"; },\r\n            get fillStyle() { return \"#000\"; },\r\n            get strokeStyle() { return \"#000\"; },\r\n            get shadowBlur() { return 0; },\r\n            get shadowColor() { return \"#000\"; },\r\n            get shadowOffsetX() { return 0; },\r\n            get shadowOffsetY() { return 0; },\r\n            get lineCap() { return <CanvasLineCap>\"butt\"; },\r\n            get lineJoin() { return <CanvasLineJoin>\"miter\"; },\r\n            get lineWidth() { return 1.0; },\r\n            get miterLimit() { return 10.0; },\r\n            get lineDashOffset() { return 0; },\r\n            get textLineHeight() { return \"1.5em\"; },\r\n            get fontStyle() { return \"normal\"; },\r\n            get fontWeight() { return \"normal\"; },\r\n            get fontSize() { return \"16px\"; },\r\n            get fontFamily() { return \"sans-serif\"; },\r\n            get textAlign() { return <CanvasTextAlign>\"left\"; },\r\n            get textBaseline() { return <CanvasTextBaseline>\"bottom\"; },\r\n            get direction() { return <CanvasDirection>\"inherit\"; },\r\n            get imageSmoothingEnabled() { return true; }\r\n        };\r\n\r\n\r\n        constructor(canvas: CanvasSurface) {\r\n            this.canvas = canvas;\r\n        }\r\n\r\n        public abstract readonly name: string;\r\n\r\n        public readonly canvas: CanvasSurface;\r\n\r\n\r\n\r\n        // compositing\r\n\r\n        public abstract globalAlpha: number;\r\n\r\n        public abstract globalCompositeOperation: string;\r\n\r\n\r\n        // colors, styles, shadows\r\n\r\n        public abstract fillStyle: RendererBrush;\r\n\r\n        public abstract strokeStyle: RendererBrush;\r\n\r\n        public abstract shadowBlur: number;\r\n\r\n        public abstract shadowColor: string;\r\n\r\n        public abstract shadowOffsetX: number;\r\n\r\n        public abstract shadowOffsetY: number;\r\n\r\n\r\n        // gradients, pattern\r\n\r\n        public abstract createLinearGradient(x0: number, y0: number, x1: number, y1: number): CanvasGradient;\r\n\r\n        public abstract createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): CanvasGradient;\r\n\r\n        public abstract createPattern(image: CanvasImageSource, repetition: string): CanvasPattern;\r\n\r\n\r\n        // line style\r\n\r\n        public abstract lineCap: CanvasLineCap;\r\n\r\n        public abstract lineJoin: CanvasLineJoin;\r\n\r\n        public abstract lineWidth: number;\r\n\r\n        public abstract miterLimit: number;\r\n\r\n        public abstract lineDashOffset: number;\r\n\r\n        public abstract getLineDash(): number[];\r\n\r\n        public abstract setLineDash(segments: Iterable<number>): void;\r\n\r\n\r\n        // text style\r\n\r\n        public abstract textLineHeight: string;\r\n\r\n        public abstract fontWeight: string;\r\n\r\n        public abstract fontStyle: string;\r\n\r\n        public abstract fontSize: string;\r\n\r\n        public abstract fontFamily: string;\r\n\r\n        public abstract textAlign: CanvasTextAlign;\r\n\r\n        public abstract textBaseline: CanvasTextBaseline;\r\n\r\n        public abstract direction: CanvasDirection;\r\n\r\n\r\n        // context, canvas\r\n\r\n        public abstract saveState(): void;\r\n\r\n        public abstract restoreState(): void;\r\n\r\n        public abstract toDataURL(type?: string, quality?: any): string;\r\n\r\n\r\n        // clear, stroke, fill, clip\r\n\r\n        public abstract clearRect(x: number, y: number, width: number, height: number, fillStyle?: RendererBrush): void;\r\n\r\n        public abstract strokeRect(x: number, y: number, width: number, height: number): void;\r\n\r\n        public abstract fillRect(x: number, y: number, width: number, height: number): void;\r\n\r\n        public abstract stroke(): void;\r\n\r\n        public abstract fill(fillRule?: CanvasFillRule): void;\r\n\r\n        public abstract strokePath2D(path2D: Path2D): void;\r\n\r\n        public abstract fillPath2D(path2D: Path2D, fillRule?: CanvasFillRule): void;\r\n\r\n        public abstract clip(): void;\r\n\r\n\r\n        // shapes\r\n\r\n        public abstract rect(x: number, y: number, width: number, height: number): void;\r\n\r\n        public abstract square(x: number, y: number, size: number): void;\r\n\r\n        public abstract ellipse(x: number, y: number, rx: number, ry: number, rotation?: number, startAngle?: number, endAngle?: number): void;\r\n\r\n        public abstract circle(x: number, y: number, r: number): void;\r\n\r\n        public abstract arc(x: number, y: number, r: number, rotation: number, startAngle: number, endAngle: number, anticlockwise?: boolean): void;\r\n\r\n\r\n        // path\r\n\r\n        public abstract beginPath(): void;\r\n\r\n        public abstract closePath(): void;\r\n\r\n        public abstract arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void;\r\n\r\n        public abstract moveTo(x: number, y: number): void;\r\n\r\n        public abstract lineTo(x: number, y: number): void;\r\n\r\n        public abstract bezierCurveTo(c1x: number, c1y: number, c2x: number, c2y: number, x: number, y: number): void;\r\n\r\n        public abstract quadraticCurveTo(cx: number, cy: number, x: number, y: number): void;\r\n\r\n\r\n        // hit testing\r\n\r\n        public abstract isPointInPath(x: number, y: number, fillRule?: CanvasFillRule): boolean;\r\n\r\n        public abstract isPointInPath2D(path2D: Path2D, x: number, y: number, fillRule?: CanvasFillRule): boolean;\r\n\r\n        public abstract isPointInStroke(x: number, y: number): boolean;\r\n\r\n        public abstract isPointInPath2DStroke(path2D: Path2D, x: number, y: number): boolean;\r\n\r\n        public abstract addHitRegion(options?: any): void;\r\n\r\n        public abstract removeHitRegion(id: string): void;\r\n\r\n        public abstract clearHitRegions(): void;\r\n\r\n\r\n        // image, imageData\r\n\r\n        public abstract drawImage(img: CanvasImageSource, dx: number, dy: number, dw?: number, dh?: number, sx?: number, sy?: number, sw?: number, sh?: number): void;\r\n\r\n        public abstract createImageData(width: number, height: number): ImageData;\r\n\r\n        public abstract cloneImageData(imageData: ImageData): ImageData;\r\n\r\n        public abstract getImageData(sx: number, sy: number, sw: number, sh: number): ImageData;\r\n\r\n        public abstract putImageData(imageData: ImageData, x: number, y: number): void;\r\n\r\n        public abstract imageSmoothingEnabled: boolean;\r\n\r\n\r\n        // text\r\n\r\n        public abstract fillText(text: string, x: number, y: number, maxWidth?: number): void;\r\n\r\n        public abstract strokeText(text: string, x: number, y: number, maxWidth?: number): void;\r\n\r\n        public abstract measureText(text: string): TextMetrics;\r\n\r\n\r\n        // transformations\r\n\r\n        public abstract rotate(angle: number): void;\r\n\r\n        public abstract translate(dx: number, dy: number): void;\r\n\r\n        public abstract scale(x: number, y: number): void;\r\n\r\n        public abstract transform(a: number, b: number, c: number, d: number, e: number, f: number): void;\r\n\r\n        public abstract setTransform(a: number, b: number, c: number, d: number, e: number, f: number): void;\r\n\r\n        public abstract resetTransform(): void;\r\n\r\n\r\n        // misc\r\n\r\n        public abstract drawFocusIfNeeded(element: Element): void;\r\n    }\r\n}","\r\n/// <reference path=\"GraphicsRenderer.ts\" />\r\n\r\nnamespace Cgx {\r\n\r\n    export interface CanvasRendererSupport extends GraphicsRendererSupport {\r\n        readonly ellipseDrawing: boolean;\r\n        readonly addHitRegion: boolean;\r\n        readonly removeHitRegion: boolean;\r\n        readonly clearHitRegion: boolean;\r\n    }\r\n\r\n    export class CanvasRenderer extends GraphicsRenderer {\r\n\r\n        public static readonly support: CanvasRendererSupport = (() => {\r\n            return {\r\n                ellipseDrawing: \"ellipse\" in CanvasRenderingContext2D.prototype,\r\n                addHitRegion: \"addHitRegion\" in CanvasRenderingContext2D.prototype,\r\n                removeHitRegion: \"removeHitRegion\" in CanvasRenderingContext2D.prototype,\r\n                clearHitRegion: \"clearHitRegions\" in CanvasRenderingContext2D.prototype\r\n            };\r\n        })();\r\n\r\n        private _context: CanvasRenderingContext2D;\r\n        private _fontSize: string;\r\n        private _fontFamily: string;\r\n        private _textLineHeight: string;\r\n        private _fontWeight: string;\r\n        private _fontStyle: string;\r\n\r\n        constructor(canvas: HTMLCanvasElement) {\r\n            super(canvas);\r\n            this._context = canvas.getContext(\"2d\");\r\n            this.setDefaultValues();\r\n        }\r\n\r\n        private setDefaultValues() {\r\n            this.globalAlpha = GraphicsRenderer.defaultValues.globalAlpha;\r\n            this.globalCompositeOperation = GraphicsRenderer.defaultValues.globalCompositeOperation;\r\n            this.fillStyle = GraphicsRenderer.defaultValues.fillStyle;\r\n            this.strokeStyle = GraphicsRenderer.defaultValues.strokeStyle;\r\n            this.shadowBlur = GraphicsRenderer.defaultValues.shadowBlur;\r\n            this.shadowColor = GraphicsRenderer.defaultValues.shadowColor;\r\n            this.shadowOffsetX = GraphicsRenderer.defaultValues.shadowOffsetX;\r\n            this.shadowOffsetY = GraphicsRenderer.defaultValues.shadowOffsetY;\r\n            this.lineCap = GraphicsRenderer.defaultValues.lineCap;\r\n            this.lineJoin = GraphicsRenderer.defaultValues.lineJoin;\r\n            this.lineWidth = GraphicsRenderer.defaultValues.lineWidth;\r\n            this.miterLimit = GraphicsRenderer.defaultValues.miterLimit;\r\n            this.lineDashOffset = GraphicsRenderer.defaultValues.lineDashOffset;\r\n            this.textLineHeight = GraphicsRenderer.defaultValues.textLineHeight;\r\n            this.fontStyle = GraphicsRenderer.defaultValues.fontStyle;\r\n            this.fontWeight = GraphicsRenderer.defaultValues.fontWeight;\r\n            this.fontSize = GraphicsRenderer.defaultValues.fontSize;\r\n            this.fontFamily = GraphicsRenderer.defaultValues.fontFamily;\r\n            this.textAlign = GraphicsRenderer.defaultValues.textAlign;\r\n            this.textBaseline = GraphicsRenderer.defaultValues.textBaseline;\r\n            this.direction = GraphicsRenderer.defaultValues.direction;\r\n            this.imageSmoothingEnabled = GraphicsRenderer.defaultValues.imageSmoothingEnabled;\r\n        }\r\n\r\n        private ellipsePath(cx: number, cy: number, rx: number, ry: number, otpRotation?: number, startAngle?: number, endAngle?: number) {\r\n\r\n            otpRotation = otpRotation || 0;\r\n            startAngle = startAngle || 0;\r\n            endAngle = endAngle || 2 * Math.PI;\r\n\r\n            // TODO: rotation\r\n            // TODO: startAngle\r\n            // TODO: endAngle\r\n\r\n            var halfRadiusX = rx * 0.545; // TODO: cercare un metodo migliore\r\n            var halfRadiusY = ry * 0.545; // TODO: cercare un metodo migliore\r\n\r\n            var ql = cx - halfRadiusX;\r\n            var qt = cy - halfRadiusY;\r\n            var qr = cx + halfRadiusX;\r\n            var qb = cy + halfRadiusY;\r\n\r\n            var pA = { x: cx, y: cy + ry };\r\n            var pB = { x: cx + rx, y: cy };\r\n            var pC = { x: cx, y: cy - ry };\r\n            var pD = { x: cx - rx, y: cy };\r\n\r\n            var c1B = { x: qr, y: pA.y };\r\n            var c2B = { x: pB.x, y: qb };\r\n            var c1C = { x: pB.x, y: qt };\r\n            var c2C = { x: qr, y: pC.y };\r\n            var c1D = { x: ql, y: pC.y };\r\n            var c2D = { x: pD.x, y: qt };\r\n            var c1A = { x: pD.x, y: qb };\r\n            var c2A = { x: ql, y: pA.y };\r\n\r\n            this.moveTo(pA.x, pA.y);\r\n            this.bezierCurveTo(c1B.x, c1B.y, c2B.x, c2B.y, pB.x, pB.y);\r\n            this.bezierCurveTo(c1C.x, c1C.y, c2C.x, c2C.y, pC.x, pC.y);\r\n            this.bezierCurveTo(c1D.x, c1D.y, c2D.x, c2D.y, pD.x, pD.y);\r\n            this.bezierCurveTo(c1A.x, c1A.y, c2A.x, c2A.y, pA.x, pA.y);\r\n            this.closePath();\r\n        }\r\n\r\n        private buildFontValue() {\r\n            // <font-style> <font-variant> <font-weight> <font-stretch> <font-size>/<line-height> <font-family>\r\n            \r\n            const values: string[] = [];\r\n            if (this.fontStyle) { values.push(this.fontStyle); }\r\n            //if (this.fontVariant) { values.push(this.fontVariant); }\r\n            if (this.fontWeight) { values.push(this.fontWeight); }\r\n            //if (this.fontStretch) { values.push(this.fontStretch); }\r\n            if (this.textLineHeight) {\r\n                values.push(`${this.fontSize}/${this.textLineHeight}`);\r\n            } else {\r\n                values.push(this.fontSize);\r\n            }\r\n            values.push(this.fontFamily);\r\n\r\n            return values.join(\" \");\r\n        }\r\n\r\n        public readonly name = \"CanvasRenderer\";\r\n\r\n\r\n        // compositing\r\n\r\n        public get globalAlpha() {\r\n            return this._context.globalAlpha;\r\n        }\r\n        public set globalAlpha(value: number) {\r\n            this._context.globalAlpha = value;\r\n        }\r\n\r\n        public get globalCompositeOperation() {\r\n            return this._context.globalCompositeOperation;\r\n        }\r\n        public set globalCompositeOperation(value: string) {\r\n            this._context.globalCompositeOperation = value;\r\n        }\r\n\r\n\r\n        // colors, styles, shadows\r\n\r\n        public get fillStyle() {\r\n            return this._context.fillStyle;\r\n        }\r\n        public set fillStyle(value: RendererBrush) {\r\n            this._context.fillStyle = value;\r\n        }\r\n\r\n        public get strokeStyle() {\r\n            return this._context.strokeStyle;\r\n        }\r\n        public set strokeStyle(value: RendererBrush) {\r\n            this._context.strokeStyle = value;\r\n        }\r\n\r\n        public get shadowBlur() {\r\n            return this._context.shadowBlur;\r\n        }\r\n        public set shadowBlur(value: number) {\r\n            this._context.shadowBlur = value;\r\n        }\r\n\r\n        public get shadowColor() {\r\n            return this._context.shadowColor;\r\n        }\r\n        public set shadowColor(value: string) {\r\n            this._context.shadowColor = value;\r\n        }\r\n\r\n        public get shadowOffsetX() {\r\n            return this._context.shadowOffsetX;\r\n        }\r\n        public set shadowOffsetX(value: number) {\r\n            this._context.shadowOffsetX = value;\r\n        }\r\n\r\n        public get shadowOffsetY() {\r\n            return this._context.shadowOffsetY;\r\n        }\r\n        public set shadowOffsetY(value: number) {\r\n            this._context.shadowOffsetY = value;\r\n        }\r\n\r\n\r\n        // gradients, pattern\r\n\r\n        public createLinearGradient(x0: number, y0: number, x1: number, y1: number) {\r\n            return this._context.createLinearGradient(x0, y0, x1, y1);\r\n        }\r\n\r\n        public createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number) {\r\n            return this._context.createRadialGradient(x0, y0, r0, x1, y1, r1);\r\n        }\r\n\r\n        public createPattern(image: CanvasImageSource, repetition: string) {\r\n            return this._context.createPattern(image, repetition);\r\n        }\r\n\r\n\r\n        // line style\r\n\r\n        public get lineCap() {\r\n            return this._context.lineCap;\r\n        }\r\n        public set lineCap(value: CanvasLineCap) {\r\n            this._context.lineCap = value;\r\n        }\r\n\r\n        public get lineJoin() {\r\n            return this._context.lineJoin;\r\n        }\r\n        public set lineJoin(value: CanvasLineJoin) {\r\n            this._context.lineJoin = value;\r\n        }\r\n\r\n        public get lineWidth() {\r\n            return this._context.lineWidth;\r\n        }\r\n        public set lineWidth(value: number) {\r\n            this._context.lineWidth = value;\r\n        }\r\n\r\n        public get miterLimit() {\r\n            return this._context.miterLimit;\r\n        }\r\n        public set miterLimit(value: number) {\r\n            this._context.miterLimit = value;\r\n        }\r\n\r\n        public get lineDashOffset() {\r\n            return this._context.lineDashOffset;\r\n        }\r\n        public set lineDashOffset(value: number) {\r\n            this._context.lineDashOffset = value;\r\n        }\r\n\r\n        public getLineDash() {\r\n            return this._context.getLineDash();\r\n        }\r\n\r\n        public setLineDash(segments: Iterable<number>) {\r\n            this._context.setLineDash(segments);\r\n        }\r\n\r\n\r\n        // text style\r\n\r\n        public get textLineHeight() {\r\n            return this._textLineHeight;\r\n        }\r\n        public set textLineHeight(value: string) {\r\n            this._textLineHeight = value;\r\n            this._context.font = this.buildFontValue();\r\n        }\r\n\r\n        public get fontSize() {\r\n            return this._fontSize;\r\n        }\r\n        public set fontSize(value: string) {\r\n            this._fontSize = value;\r\n            this._context.font = this.buildFontValue();\r\n        }\r\n\r\n        public get fontStyle() {\r\n            return this._fontStyle;\r\n        }\r\n        public set fontStyle(value: string) {\r\n            this._fontStyle = value;\r\n            this._context.font = this.buildFontValue();\r\n        }\r\n\r\n        public get fontWeight() {\r\n            return this._fontWeight;\r\n        }\r\n        public set fontWeight(value: string) {\r\n            this._fontWeight = value;\r\n            this._context.font = this.buildFontValue();\r\n        }\r\n\r\n        public get fontFamily() {\r\n            return this._fontFamily;\r\n        }\r\n        public set fontFamily(value: string) {\r\n            this._fontFamily = value;\r\n            this._context.font = this.buildFontValue();\r\n\r\n        }\r\n\r\n        public get textAlign() {\r\n            return this._context.textAlign;\r\n        }\r\n        public set textAlign(value: CanvasTextAlign) {\r\n            this._context.textAlign = value;\r\n        }\r\n\r\n        public get textBaseline() {\r\n            return this._context.textBaseline;\r\n        }\r\n        public set textBaseline(value: CanvasTextBaseline) {\r\n            this._context.textBaseline = value;\r\n        }\r\n\r\n        public get direction() {\r\n            return this._context.direction;\r\n        }\r\n        public set direction(value: CanvasDirection) {\r\n            this._context.direction = value;\r\n        }\r\n\r\n\r\n        // context, canvas\r\n\r\n        public saveState() {\r\n            this._context.save();\r\n        }\r\n\r\n        public restoreState() {\r\n            this._context.restore();\r\n        }\r\n\r\n        public toDataURL(type?: string, quality?: any) {\r\n            if (this.canvas instanceof HTMLCanvasElement) {\r\n                return this.canvas.toDataURL(type, quality);\r\n            }\r\n            else {\r\n                const imageData = this._context.getImageData(0, 0, this.canvas.width, this.canvas.height);\r\n                const canvasGraphics = Cgx.Engine.createGraphics(this.canvas.width, this.canvas.height);\r\n                canvasGraphics.putImageData(imageData, 0, 0);\r\n                return canvasGraphics.getDataURL(type, quality);\r\n            }\r\n        }\r\n\r\n\r\n        // clear, stroke, fill, clip\r\n\r\n        public clearRect(x: number, y: number, width: number, height: number, fillStyle?: RendererBrush) {\r\n            if (typeof fillStyle === \"undefined\" || fillStyle === null) {\r\n                this._context.clearRect(x, y, width, height);\r\n            } else {\r\n                this._context.fillStyle = fillStyle;\r\n                this._context.fillRect(x, y, width, height);\r\n            }\r\n        }\r\n\r\n        public strokeRect(x: number, y: number, width: number, height: number) {\r\n            this._context.strokeRect(x, y, width, height);\r\n        }\r\n\r\n        public fillRect(x: number, y: number, width: number, height: number) {\r\n            this._context.fillRect(x, y, width, height);\r\n        }\r\n\r\n        public stroke() {\r\n            this._context.stroke();\r\n        }\r\n\r\n        public fill(fillRule?: CanvasFillRule) {\r\n            this._context.fill(fillRule);\r\n        }\r\n\r\n        public strokePath2D(path2D: Path2D) {\r\n            this._context.stroke(path2D);\r\n        }\r\n\r\n        public fillPath2D(path2D: Path2D, fillRule?: CanvasFillRule) {\r\n            this._context.fill(path2D, fillRule);\r\n        }\r\n\r\n        public clip() {\r\n            this._context.clip();\r\n        }\r\n\r\n\r\n        // shapes\r\n\r\n        public rect(x: number, y: number, width: number, height: number) {\r\n            this._context.rect(x, y, width, height);\r\n        }\r\n\r\n        public square(x: number, y: number, size: number) {\r\n            this._context.rect(x, y, size, size);\r\n        }\r\n\r\n        public ellipse(x: number, y: number, rx: number, ry: number, rotation?: number, startAngle?: number, endAngle?: number) {\r\n            if (CanvasRenderer.support.ellipseDrawing) {\r\n                rotation = rotation || 0;\r\n                startAngle = startAngle || 0;\r\n                endAngle = endAngle || 2 * Math.PI;\r\n                this._context.ellipse(x, y, rx, ry, rotation, startAngle, endAngle);\r\n            }\r\n            else {\r\n                // ellipse polyfill\r\n                this.ellipsePath(x, y, rx, ry, rotation, startAngle, endAngle);\r\n            }\r\n        }\r\n\r\n        public circle(x: number, y: number, r: number) {\r\n            if (CanvasRenderer.support.ellipseDrawing) {\r\n                this._context.ellipse(x, y, r, r, 0, 0, 2 * Math.PI);\r\n            }\r\n            else {\r\n                this._context.arc(x, y, r, 0, 2 * Math.PI, false);\r\n            }\r\n        }\r\n\r\n        public arc(x: number, y: number, r: number, rotation: number, startAngle: number, endAngle: number, anticlockwise?: boolean) {\r\n            this._context.arc(x, y, r, startAngle, endAngle, anticlockwise);\r\n        }\r\n\r\n\r\n        // path\r\n\r\n        public beginPath() {\r\n            this._context.beginPath();\r\n        }\r\n\r\n        public closePath() {\r\n            this._context.closePath();\r\n        }\r\n\r\n        public arcTo(x1: number, y1: number, x2: number, y2: number, radius: number) {\r\n            this._context.arcTo(x1, y1, x2, y2, radius);\r\n        }\r\n\r\n        public moveTo(x: number, y: number) {\r\n            this._context.moveTo(x, y);\r\n        }\r\n\r\n        public lineTo(x: number, y: number) {\r\n            this._context.lineTo(x, y);\r\n        }\r\n\r\n        public bezierCurveTo(c1x: number, c1y: number, c2x: number, c2y: number, x: number, y: number) {\r\n            this._context.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\r\n        }\r\n\r\n        public quadraticCurveTo(cx: number, cy: number, x: number, y: number) {\r\n            this._context.quadraticCurveTo(cx, cy, x, y);\r\n        }\r\n\r\n\r\n        // hit testing\r\n\r\n        public isPointInPath(x: number, y: number, fillRule?: CanvasFillRule) {\r\n            return this._context.isPointInPath(x, y, fillRule);\r\n        }\r\n\r\n        public isPointInPath2D(path2D: Path2D, x: number, y: number, fillRule?: CanvasFillRule) {\r\n            return this._context.isPointInPath(path2D, x, y, fillRule);\r\n        }\r\n\r\n        public isPointInStroke(x: number, y: number) {\r\n            return this._context.isPointInStroke(x, y);\r\n        }\r\n\r\n        public isPointInPath2DStroke(path2D: Path2D, x: number, y: number) {\r\n            return this._context.isPointInStroke(path2D, x, y);\r\n        }\r\n\r\n        public addHitRegion(options?: any) {\r\n            if (CanvasRenderer.support.addHitRegion) {\r\n                (<any>this._context).addHitRegion(options);\r\n            } else {\r\n                console.log(\"unsupported function 'addHitRegion'\");\r\n            }\r\n        }\r\n\r\n        public removeHitRegion(id: string) {\r\n            if (CanvasRenderer.support.removeHitRegion) {\r\n                (<any>this._context).removeHitRegion(id);\r\n            } else {\r\n                console.log(\"unsupported function 'removeHitRegion'\");\r\n            }\r\n        }\r\n\r\n        public clearHitRegions() {\r\n            if (CanvasRenderer.support.clearHitRegion) {\r\n                (<any>this._context).clearHitRegions();\r\n            } else {\r\n                console.log(\"unsupported function 'clearHitRegions'\");\r\n            }\r\n        }\r\n\r\n\r\n        // image, imageData\r\n\r\n        public drawImage(img: CanvasImageSource, x: number, y: number, width?: number, height?: number, sx?: number, sy?: number, sw?: number, sh?: number) {\r\n\t\t\tif (sx != null && sy != null && sw != null && sh != null) {\r\n            \tthis._context.drawImage(img, x, y, width, height, sx, sy, sw, sh);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._context.drawImage(img, x, y, width, height);\r\n\t\t\t}\r\n        }\r\n\r\n        public createImageData(width: number, height: number) {\r\n            return this._context.createImageData(width, height);\r\n        }\r\n\r\n        public cloneImageData(imageData: ImageData) {\r\n            var imageDataArrayCopy = new Uint8ClampedArray(imageData.data);\r\n            imageDataArrayCopy.set(imageData.data);\r\n            return new ImageData(imageDataArrayCopy, imageData.width, imageData.height);\r\n        }\r\n\r\n        public getImageData(sx: number, sy: number, sw: number, sh: number) {\r\n            sx = sx || 0;\r\n            sy = sy || 0;\r\n            sw = sw || this._context.canvas.width;\r\n            sh = sh || this._context.canvas.height;\r\n            return this._context.getImageData(sx, sy, sw, sh);\r\n        }\r\n\r\n        public putImageData(imageData: ImageData, x: number, y: number) {\r\n            this._context.putImageData(imageData, x, y);\r\n        }\r\n\r\n        public get imageSmoothingEnabled(): boolean {\r\n            return (<any>this._context).mozImageSmoothingEnabled || (<any>this._context).webkitImageSmoothingEnabled || (<any>this._context).msImageSmoothingEnabled || (<any>this._context).imageSmoothingEnabled;\r\n        }\r\n        public set imageSmoothingEnabled(v: boolean) {\r\n            (<any>this._context).mozImageSmoothingEnabled = v;\r\n            (<any>this._context).webkitImageSmoothingEnabled = v;\r\n            (<any>this._context).msImageSmoothingEnabled = v;\r\n            (<any>this._context).imageSmoothingEnabled = v;\r\n        }\r\n\r\n\r\n        // text\r\n\r\n        public fillText(text: string, x: number, y: number, maxWidth?: number) {\r\n            this._context.fillText(text, x, y, maxWidth);\r\n        }\r\n\r\n        public strokeText(text: string, x: number, y: number, maxWidth?: number) {\r\n            this._context.strokeText(text, x, y, maxWidth);\r\n        }\r\n\r\n        public measureText(text: string) {\r\n            return this._context.measureText(text);\r\n        }\r\n\r\n\r\n        // transformations\r\n\r\n        public rotate(angle: number) {\r\n            this._context.rotate(angle);\r\n        }\r\n\r\n        public translate(dx: number, dy: number) {\r\n            this._context.translate(dx, dy);\r\n        }\r\n\r\n        public scale(x: number, y: number) {\r\n            this._context.scale(x, y);\r\n        }\r\n\r\n        public transform(a: number, b: number, c: number, d: number, e: number, f: number) {\r\n            this._context.transform(a, b, c, d, e, f);\r\n        }\r\n\r\n        public setTransform(a: number, b: number, c: number, d: number, e: number, f: number) {\r\n            this._context.setTransform(a, b, c, d, e, f);\r\n        }\r\n\r\n        public resetTransform() {\r\n            this._context.setTransform(1, 0, 0, 1, 0, 0);\r\n        };\r\n\r\n\r\n        // misc\r\n\r\n        public drawFocusIfNeeded(element: Element) {\r\n            this._context.drawFocusIfNeeded(element);\r\n        }\r\n    }\r\n}","\r\nnamespace Cgx {\r\n\r\n    export interface Point { x: number, y: number }\r\n\r\n\texport interface Size { width: number, height: number }\r\n\r\n    export type BrushDefinition = number | string | number[] | GradientBrush | PatternBrush;\r\n\r\n    export type CornersRadiusObject = { topLeft: number, topRight: number, bottomLeft: number, bottomRight: number };\r\n\r\n    export type CornersRadiusDefinition = number | number[] | CornersRadiusObject;\r\n\r\n    export interface Shadow {\r\n        blur: number;\r\n        offsetX: number;\r\n        offsetY: number;\r\n        color: string;\r\n    }\r\n}","\r\nnamespace Cgx {\r\n\r\n    export type EaseFunc = (t: number) => number;\r\n\r\n    export class Ease {\r\n\r\n        private static readonly easeFunctions = [\r\n            \"linear\",\r\n            \"quadraticIn\", \"quadraticOut\", \"quadraticInOut\",\r\n            \"cubicIn\", \"cubicOut\", \"cubicInOut\",\r\n            \"quarticIn\", \"quarticOut\", \"quarticInOut\",\r\n            \"quinticIn\", \"quinticOut\", \"quinticInOut\",\r\n            \"sineIn\", \"sineOut\", \"sineInOut\",\r\n            \"expoIn\", \"expoOut\", \"expoInOut\",\r\n            \"bounceIn\", \"bounceOut\", \"bounceInOut\",\r\n            \"backIn\", \"backOut\", \"backInOut\",\r\n            \"elasticIn\", \"elasticOut\", \"elasticInOut\",\r\n            \"circularIn\", \"circularOut\", \"circularInOut\"\r\n        ];\r\n\r\n        public static getEaseFunctionNames(): ReadonlyArray<string> {\r\n            return this.easeFunctions.slice(0);\r\n        }\r\n\r\n        public static getEasingFunctionOrDefault(easing: string) {\r\n            if (easing in Ease) {\r\n                return (<any>Ease)[easing];\r\n            }\r\n            return Ease.linear;\r\n        }\r\n\r\n        public static linear(t: number) {\r\n            return t;\r\n        }\r\n\r\n        public static quadraticIn(t: number) {\r\n            return Math.pow(t, 2);\r\n        }\r\n\r\n        public static quadraticOut(t: number) {\r\n            return 1 - Math.pow(1 - t, 2);\r\n        }\r\n\r\n        public static quadraticInOut(t: number) {\r\n            if (t < 0.5) {\r\n                t *= 2;\r\n                return Math.pow(t, 2) * 0.5;\r\n            } else {\r\n                t = (t - 0.5) * 2;\r\n                return ((1 - Math.pow(1 - t, 2)) * 0.5) + 0.5;\r\n            }\r\n        }\r\n\r\n\r\n        public static cubicIn(t: number) {\r\n            return Math.pow(t, 3);\r\n        }\r\n\r\n        public static cubicOut(t: number) {\r\n            return 1 - Math.pow(1 - t, 3);\r\n        }\r\n\r\n        public static cubicInOut(t: number) {\r\n            if (t < 0.5) {\r\n                t *= 2;\r\n                return Math.pow(t, 3) * 0.5;\r\n            } else {\r\n                t = (t - 0.5) * 2;\r\n                return ((1 - Math.pow(1 - t, 3)) * 0.5) + 0.5;\r\n            }\r\n        }\r\n\r\n\r\n        public static quarticIn(t: number) {\r\n            return Math.pow(t, 4);\r\n        }\r\n\r\n        public static quarticOut(t: number) {\r\n            return 1 - Math.pow(1 - t, 4);\r\n        }\r\n\r\n        public static quarticInOut(t: number) {\r\n            if (t < 0.5) {\r\n                t *= 2;\r\n                return Math.pow(t, 4) * 0.5;\r\n            } else {\r\n                t = (t - 0.5) * 2;\r\n                return ((1 - Math.pow(1 - t, 4)) * 0.5) + 0.5;\r\n            }\r\n        }\r\n\r\n\r\n        public static quinticIn(t: number) {\r\n            return Math.pow(t, 5);\r\n        }\r\n\r\n        public static quinticOut(t: number) {\r\n            return 1 - Math.pow(1 - t, 5);\r\n        }\r\n\r\n        public static quinticInOut(t: number) {\r\n            if (t < 0.5) {\r\n                t *= 2;\r\n                return Math.pow(t, 5) * 0.5;\r\n            } else {\r\n                t = (t - 0.5) * 2;\r\n                return ((1 - Math.pow(1 - t, 5)) * 0.5) + 0.5;\r\n            }\r\n        }\r\n\r\n\r\n        public static sineIn(t: number) {\r\n            return -Math.cos(t * Math.PI * 0.5) + 1;\r\n        }\r\n\r\n        public static sineOut(t: number) {\r\n            return Math.sin(t * Math.PI * 0.5);\r\n        }\r\n\r\n        public static sineInOut(t: number) {\r\n            return -0.5 * (Math.cos(t * Math.PI) - 1);\r\n        }\r\n\r\n\r\n        public static expoIn(t: number) {\r\n            return (t == 0) ? 0 : Math.pow(2, 10 * (t - 1));\r\n        }\r\n\r\n        public static expoOut(t: number) {\r\n            return (t == 1) ? 1 : -Math.pow(2, -10 * t) + 1;\r\n        }\r\n\r\n        public static expoInOut(t: number) {\r\n            if (t == 0) return 0;\r\n            if (t == 1) return 1;\r\n            t = t / 0.5;\r\n            if (t < 1) return Math.pow(2, 10 * (t - 1)) * 0.5;\r\n            return (-Math.pow(2, -10 * --t) + 2) * 0.5;\r\n        }\r\n\r\n\r\n        public static bounceIn(t: number) {\r\n            t = 1 - t;\r\n            return 1 - Ease.bounceOut(t);\r\n        }\r\n\r\n        public static bounceOut(t: number) {\r\n            if (t < 0.3637) {\r\n                return 7.5625 * t * t;\r\n            } else if (t < 0.7272) {\r\n                return (7.5625 * (t -= 0.5454) * t + 0.75);\r\n            } else if (t < 0.9090) {\r\n                return (7.5625 * (t -= 0.8181) * t + 0.9375);\r\n            } else {\r\n                return (7.5625 * (t -= 0.9545) * t + 0.984375);\r\n            }\r\n        }\r\n\r\n        public static bounceInOut(t: number) {\r\n            if (t < 0.5) {\r\n                return Ease.bounceIn(t * 2) * 0.5;\r\n            } else {\r\n                return Ease.bounceOut((t * 2) - 1) * 0.5 + 0.5;\r\n            }\r\n        }\r\n\r\n\r\n        public static backIn(t: number) {\r\n            var s = 1.70158;\r\n            return t * t * ((s + 1) * t - s);\r\n        }\r\n\r\n        public static backOut(t: number) {\r\n            var s = 1.70158;\r\n            t = t - 1;\r\n            return (t * t * ((s + 1) * t + s) + 1);\r\n        }\r\n\r\n        public static backInOut(t: number) {\r\n            var d = 1;\r\n            var s = 1.70158;\r\n            t = t / 0.5;\r\n            if (t < 1) {\r\n                return (t * t * (((s *= (1.525)) + 1) * t - s)) * 0.5;\r\n            } else {\r\n                return ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) * 0.5;\r\n            }\r\n        }\r\n\r\n\r\n        public static elasticIn(t: number) {\r\n            if (t === 0 || t === 1) {\r\n                return t;\r\n            }\r\n            var p = 0.3,\r\n                s = p / 4;\r\n            return Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\r\n        }\r\n\r\n        public static elasticOut(t: number) {\r\n            return 1 - Ease.elasticIn(1 - t);\r\n        }\r\n\r\n        public static elasticInOut(t: number) {\r\n            if (t < 0.5) {\r\n                return Ease.elasticIn(t * 2) * 0.5;\r\n            } else {\r\n                return Ease.elasticOut((t * 2) - 1) * 0.5 + 0.5;\r\n            }\r\n        }\r\n\r\n\r\n        public static circularIn(t: number) {\r\n            return -(Math.sqrt(1 - t * t) - 1);\r\n        }\r\n\r\n        public static circularOut(t: number) {\r\n            t = t - 1;\r\n            return Math.sqrt(1 - t * t);\r\n        }\r\n\r\n        public static circularInOut(t: number) {\r\n            t = t / 0.5;\r\n            if (t < 1)\r\n                return -(Math.sqrt(1 - t * t) - 1) * 0.5;\r\n            return (Math.sqrt(1 - (t -= 2) * t) + 1) * 0.5;\r\n        }\r\n    }\r\n}","\r\nnamespace Cgx {\r\n\r\n    export interface EngineSupport {\r\n        readonly imageBitmapRenderingContext: boolean;\r\n        readonly offscreenCanvas: boolean;\r\n        readonly offscreenCanvasTransferToImageBitmap: boolean;\r\n        readonly bufferedGraphics: boolean;\r\n    }\r\n\r\n    export interface EngineSettings {\r\n        defaultRenderer: string;\r\n        vars: { [name: string]: any }\r\n    }\r\n\r\n    export class Engine {\r\n\r\n        public static readonly support: EngineSupport = (() => {\r\n            const imageBitmapRenderingContext = \"ImageBitmapRenderingContext\" in window;\r\n            const offscreenCanvas = \"OffscreenCanvas\" in window;\r\n            const offscreenCanvasTransferToImageBitmap = offscreenCanvas && \"transferToImageBitmap\" in OffscreenCanvas.prototype;\r\n            return {\r\n                imageBitmapRenderingContext: imageBitmapRenderingContext,\r\n                offscreenCanvas: offscreenCanvas,\r\n                offscreenCanvasTransferToImageBitmap: offscreenCanvasTransferToImageBitmap,\r\n                bufferedGraphics: offscreenCanvas && offscreenCanvasTransferToImageBitmap\r\n            };\r\n        })();\r\n\r\n        private static _renderers: Array<[string, new (canvasSurface: CanvasSurface) => GraphicsRenderer]> = [];\r\n        private static _defaultRendererName: string;\r\n        private static _defaultRendererType: new (canvasSurface: CanvasSurface) => GraphicsRenderer;\r\n        private static _vars: { [name: string]: any } = {}\r\n\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/OffscreenCanvas\r\n        private static createOffscreenCanvas(width: number = 256, height: number = 256) {\r\n            if (Engine.support.offscreenCanvas) {\r\n                const offscreen = new OffscreenCanvas(width, height);\r\n                return offscreen;\r\n            }\r\n            else {\r\n                return this.createCanvas(width, height);\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        private static createRenderer(canvasSurface: CanvasSurface, rendererTypeName: string): GraphicsRenderer {\r\n            let rendererType = this.getRendererType(rendererTypeName);\r\n            return new rendererType(canvasSurface);\r\n        }\r\n\r\n        private static getRendererType(typeName: string): new (canvasSurface: CanvasSurface) => GraphicsRenderer {\r\n\r\n            if (this._renderers.length == 0) {\r\n                throw new Error(\"no renderers registered\");\r\n            }\r\n\r\n            var rendererEntry = this._renderers.filter(v => v[0] === typeName)[0];\r\n            if (!rendererEntry) {\r\n                console.error(\"invalid renderer name \" + typeName);\r\n                typeName = this._defaultRendererName;\r\n                rendererEntry = this._renderers.filter(v => v[0] === typeName)[0];\r\n                return this._defaultRendererType;\r\n            }\r\n            return rendererEntry[1];\r\n        }\r\n\r\n\r\n        public static createCanvas(width: number = 256, height: number = 256) {\r\n            const canvas = document.createElement(\"canvas\");\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            return canvas;\r\n        }\r\n\r\n        public static get defaultRenderer() { return this._defaultRendererName; };\r\n        public static set defaultRenderer(v) {\r\n            if (typeof v !== \"string\")\r\n                return;\r\n            if (this._defaultRendererName != v) {\r\n                this._defaultRendererName = v;\r\n            }\r\n        }\r\n\r\n        public static get vars() { return this._vars; };\r\n\r\n        public static registerRenderer(name: string, rendererBuilder: new (canvas: HTMLCanvasElement) => GraphicsRenderer) {\r\n            // TODO: check rendererConstructor type\r\n            var rendererEntry = this._renderers.filter(v => v[0] === name)[0];\r\n            if (rendererEntry) {\r\n                rendererEntry[1] = rendererBuilder;\r\n            } else {\r\n                this._renderers.push([\r\n                    name,\r\n                    rendererBuilder\r\n                ]);\r\n                if (this._renderers.length == 1 && !this._defaultRendererName) {\r\n                    this._defaultRendererName = this._renderers[0][0];\r\n                    this._defaultRendererType = this._renderers[0][1];\r\n                }\r\n            }\r\n        }\r\n\r\n        public static loadSettings(settings: EngineSettings) {\r\n            if (\"defaultRenderer\" in settings) {\r\n                this._defaultRendererName = settings.defaultRenderer;\r\n            }\r\n            if (\"vars\" in settings) {\r\n                for (var n in settings.vars) {\r\n                    if (settings.vars.hasOwnProperty(n)) {\r\n                        this._vars[n] = settings.vars[n];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        public static createDefaultRenderer(canvasSurface: CanvasSurface): GraphicsRenderer {\r\n            if (!this._defaultRendererType)\r\n                throw new Error(\"no default renderer registered\");\r\n            return new this._defaultRendererType(canvasSurface);\r\n        }\r\n\r\n\r\n        public static createGraphicsFromCanvasSurface(canvasSurface: CanvasSurface, rendererTypeName?: string): CoreGraphics {\r\n            let renderer: GraphicsRenderer;\r\n            if (typeof rendererTypeName === \"string\") {\r\n                renderer = this.createRenderer(canvasSurface, rendererTypeName);\r\n            } else {\r\n                renderer = this.createDefaultRenderer(canvasSurface);\r\n            }\r\n            return new CoreGraphics(renderer);\r\n        }\r\n\r\n        public static createGraphics(width: number, height: number, rendererTypeName?: string): CoreGraphics {\r\n            const canvas = this.createCanvas(width, height);\r\n            return this.createGraphicsFromCanvasSurface(canvas, rendererTypeName);\r\n        }\r\n\r\n        public static createOffscreenGraphics(width: number, height: number, rendererTypeName?: string): CoreGraphics {\r\n            let canvasSurface = this.createOffscreenCanvas(width, height);\r\n            return this.createGraphicsFromCanvasSurface(canvasSurface);\r\n        }\r\n\r\n        public static createBufferedGraphics(width: number, height: number, rendererTypeName?: string): BufferedGraphics {\r\n            if (Engine.support.bufferedGraphics) {\r\n                let canvasSurface = this.createOffscreenCanvas(width, height);\r\n                let renderer: GraphicsRenderer;\r\n                if (typeof rendererTypeName === \"string\") {\r\n                    renderer = this.createRenderer(canvasSurface, rendererTypeName);\r\n                } else {\r\n                    renderer = this.createDefaultRenderer(canvasSurface);\r\n                }\r\n                return new BufferedGraphics(renderer);\r\n            }\r\n            else {\r\n                console.log(\"unsupported feature 'bufferedGraphics'\");\r\n            }\r\n        }\r\n    }\r\n\r\n    (function () {\r\n        Engine.registerRenderer(\"CanvasRenderer\", CanvasRenderer);\r\n        //Engine.registerRenderer(\"WebGLRenderer\", WebGLRenderer);\r\n    })();\r\n}\r\n","\r\nnamespace Cgx {\r\n\r\n    export class FpsCounter {\r\n\r\n        private _fps: number;\r\n        private _isRunning = false;\r\n        private _lastTimestamp: number;\r\n        private _accumulatedFrames = 0;\r\n        private _accumulatedTime = 0;\r\n\r\n        public sampleInterval = 500;\r\n\r\n        public get fps() {\r\n            return this._fps;\r\n        }\r\n\r\n        public notifyFrame(timestamp: number): void {\r\n            if (this._isRunning) {\r\n                if (!this._lastTimestamp) {\r\n                    this._lastTimestamp = timestamp;\r\n                }\r\n                var deltaTime = timestamp - this._lastTimestamp;\r\n\r\n                this._lastTimestamp = timestamp;\r\n\r\n                if (this.sampleInterval <= 0) {\r\n                    this._fps = 1000 / deltaTime;\r\n                }\r\n                else {\r\n                    this._accumulatedTime += deltaTime;\r\n                    this._accumulatedFrames++;\r\n                    if (this._accumulatedTime >= this.sampleInterval) {\r\n                        this._fps = (1000 / this._accumulatedTime) * this._accumulatedFrames;\r\n                        this._accumulatedTime = 0;\r\n                        this._accumulatedFrames = 0;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._fps = 0;\r\n            }\r\n        }\r\n\r\n        public start() {\r\n            this._isRunning = true;\r\n        }\r\n\r\n        public stop() {\r\n            this._isRunning = false;\r\n        }\r\n    }\r\n}","/// <reference path=\"CommonTypes.ts\" />\r\n\r\nnamespace Cgx {\r\n\r\n    export interface Geometry {}\r\n\r\n    export interface ArcGeometry extends Geometry {\r\n        centerPoint: Point;\r\n        radius: number;\r\n        startAngle: number;\r\n        endAngle: number;\r\n        isAntiClockwise: boolean;\r\n    }\r\n\r\n    export interface LineGeometry extends Geometry {\r\n        startPoint: Point;\r\n        endPoint: Point;\r\n    }\r\n\r\n    export interface RectangleGeometry extends Geometry {\r\n        origin: Point;\r\n        width: number;\r\n        height: number;\r\n        cornerRadius: CornersRadiusDefinition;\r\n    }\r\n\r\n    export interface EllipseGeometry extends Geometry {\r\n        centerPoint: Point;\r\n        radiusX: number;\r\n        radiusY: number;\r\n    }\r\n\r\n    export interface PolygonalGeometry extends Geometry {\r\n        points: Point[];\r\n        isClosed: boolean;\r\n    }\r\n\r\n    export interface QuadraticCurveGeometry extends PolygonalGeometry {\r\n        controlPoints: Point[];\r\n    }\r\n\r\n    export interface CubicCurveGeometry extends PolygonalGeometry {\r\n        controlPoints1: Point[];\r\n        controlPoints2: Point[];\r\n    }\r\n\r\n    export interface ImageGeometry extends RectangleGeometry {\r\n        image: CanvasImageSource;\r\n    }\r\n\r\n    export interface TextGeometry extends Geometry {\r\n        text: string;\r\n        origin: Point;\r\n    }\r\n\r\n    export interface PathGeometry extends Geometry {\r\n        path: Path2D;\r\n        origin: Point;\r\n        fillRule?: CanvasFillRule;\r\n    }\r\n\r\n    export interface DonutGeometry extends Geometry {\r\n        centerPoint: Point;\r\n        startRadius: number;\r\n        endRadius: number;\r\n        startAngle: number;\r\n        endAngle: number;\r\n        isAntiClockwise?: boolean;\r\n    }\r\n}","\r\nif(typeof module !== \"undefined\") {\r\n    module.exports = Cgx;\r\n}","\r\nnamespace Cgx {\r\n\r\n    export class Matrix {\r\n\r\n        public static readonly indentity = new Matrix(1.0, 0.0, 0.0, 1.0, 0.0, 0.0);\r\n\r\n        private static createRotationRadians(angle: number, centerX: number, centerY: number) {\r\n            var sinAngle = Math.sin(angle);\r\n            var cosAngle = Math.cos(angle);\r\n            var offsetX = (centerX * (1.0 - cosAngle)) + (centerY * sinAngle);\r\n            var offsetY = (centerY * (1.0 - cosAngle)) - (centerX * sinAngle);\r\n            return new Matrix(cosAngle, sinAngle, -sinAngle, cosAngle, offsetX, offsetY);\r\n        }\r\n\r\n        private static multiplyRefMatrix(refMatrix: Matrix, matrix: Matrix) {\r\n            var m11 = (refMatrix.m11 * matrix.m11) + (refMatrix.m12 * matrix.m21);\r\n            var m12 = (refMatrix.m11 * matrix.m12) + (refMatrix.m12 * matrix.m22);\r\n            var m21 = (refMatrix.m21 * matrix.m11) + (refMatrix.m22 * matrix.m21);\r\n            var m22 = (refMatrix.m21 * matrix.m12) + (refMatrix.m22 * matrix.m22);\r\n            var m31 = ((refMatrix.offsetX * matrix.m11) + (refMatrix.offsetY * matrix.m21)) + matrix.offsetX;\r\n            var m32 = ((refMatrix.offsetX * matrix.m12) + (refMatrix.offsetY * matrix.m22)) + matrix.offsetY;\r\n            refMatrix.m11 = m11;\r\n            refMatrix.m12 = m12;\r\n            refMatrix.m21 = m21;\r\n            refMatrix.m22 = m22;\r\n            refMatrix.offsetX = m31;\r\n            refMatrix.offsetY = m32;\r\n        }\r\n\r\n        public static invert(matrix: Matrix) {\r\n            var determinant = (matrix.m11 * matrix.m22) - (matrix.m21 * matrix.m12);\r\n            if (Math.abs(determinant) < 1.401298E-45) {\r\n                return new Matrix(Number.NaN, Number.NaN, Number.NaN, Number.NaN, Number.NaN, Number.NaN);\r\n            }\r\n            var inverseDeterminant = 1.0 / determinant;\r\n            var m11 = matrix.m22 * inverseDeterminant;\r\n            var m12 = -matrix.m12 * inverseDeterminant;\r\n            var m21 = -matrix.m21 * inverseDeterminant;\r\n            var m22 = matrix.m11 * inverseDeterminant;\r\n            var m31 = ((matrix.m21 * matrix.offsetY) - (matrix.offsetX * matrix.m22)) * inverseDeterminant;\r\n            var m32 = ((matrix.offsetX * matrix.m12) - (matrix.m11 * matrix.offsetY)) * inverseDeterminant;\r\n            return new Matrix(m11, m12, m21, m22, m31, m32);\r\n        }\r\n\r\n        public static multiplyMatrix(matrix1: Matrix, matrix2: Matrix) {\r\n            var m11 = (matrix1.m11 * matrix2.m11) + (matrix1.m12 * matrix2.m21);\r\n            var m12 = (matrix1.m11 * matrix2.m12) + (matrix1.m12 * matrix2.m22);\r\n            var m21 = (matrix1.m21 * matrix2.m11) + (matrix1.m22 * matrix2.m21);\r\n            var m22 = (matrix1.m21 * matrix2.m12) + (matrix1.m22 * matrix2.m22);\r\n            var m31 = ((matrix1.offsetX * matrix2.m11) + (matrix1.offsetY * matrix2.m21)) + matrix2.offsetX;\r\n            var m32 = ((matrix1.offsetX * matrix2.m12) + (matrix1.offsetY * matrix2.m22)) + matrix2.offsetY;\r\n            return new Matrix(m11, m12, m21, m22, m31, m32);\r\n        }\r\n\r\n        public static multiplyValue(matrix: Matrix, value: number) {\r\n            var m11 = matrix.m11 * value;\r\n            var m12 = matrix.m12 * value;\r\n            var m21 = matrix.m21 * value;\r\n            var m22 = matrix.m22 * value;\r\n            var m31 = matrix.offsetX * value;\r\n            var m32 = matrix.offsetY * value;\r\n            return new Matrix(m11, m12, m21, m22, m31, m32);\r\n        }\r\n\r\n\r\n        constructor(m11?: number, m12?: number, m21?: number, m22?: number, offsetX?: number, offsetY?: number) {\r\n            this.m11 = m11 || 1.0;\r\n            this.m12 = m12 || 0.0;\r\n            this.m21 = m21 || 0.0;\r\n            this.m22 = m22 || 1.0;\r\n            this.offsetX = offsetX || 0.0;\r\n            this.offsetY = offsetY || 0.0;\r\n        }\r\n\r\n\r\n        private isZero(value: number) {\r\n            return (Math.abs(value) < 2.2204460492503131E-15);\r\n        }\r\n\r\n        private multiplyPoint(x: number, y: number): Point {\r\n            var ox = (y * this.m21) + this.offsetX;\r\n            var oy = (x * this.m12) + this.offsetY;\r\n            x *= this.m11;\r\n            x += ox;\r\n            y *= this.m22;\r\n            y += oy;\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        private getDeterminant() {\r\n            return ((this.m11 * this.m22) - (this.m21 * this.m12));\r\n        }\r\n\r\n\r\n        public m11: number;\r\n        public m12: number;\r\n        public m21: number;\r\n        public m22: number;\r\n        public offsetX: number;\r\n        public offsetY: number;\r\n\r\n        public clone() {\r\n            return new Matrix(this.m11, this.m12, this.m21, this.m22, this.offsetX, this.offsetY);\r\n        }\r\n\r\n        public hasInverse() {\r\n            return !this.isZero(this.getDeterminant());\r\n        }\r\n\r\n        public isIdentity() {\r\n            return (this.m11 == 1.0 && this.m12 == 0.0 && this.m21 == 0.0 && this.m22 == 1.0 && this.offsetX == 0.0 && this.offsetY == 0.0);\r\n        }\r\n\r\n        public reset() {\r\n            this.m11 = 1.0;\r\n            this.m12 = 0.0;\r\n            this.m21 = 0.0;\r\n            this.m22 = 1.0;\r\n            this.offsetX = 0.0;\r\n            this.offsetY = 0.0;\r\n        }\r\n\r\n        public rotate(angle: number) {\r\n            angle = angle % 360.0;\r\n            var rotationMatrix = Matrix.createRotationRadians(angle * 0.017453292519943295, 0.0, 0.0);\r\n            Matrix.multiplyRefMatrix(this, rotationMatrix);\r\n        }\r\n\r\n        public rotateAt(angle: number, centerX: number, centerY: number) {\r\n            angle = angle % 360.0;\r\n            var rotationMatrix = Matrix.createRotationRadians(angle * 0.017453292519943295, centerX, centerY);\r\n            Matrix.multiplyRefMatrix(this, rotationMatrix);\r\n        }\r\n\r\n        public scale(scaleX: number, scaleY: number) {\r\n            var scaleMatrix = new Matrix(scaleX, 0.0, 0.0, scaleY, 0.0, 0.0);\r\n            Matrix.multiplyRefMatrix(this, scaleMatrix);\r\n        }\r\n\r\n        public scaleAt(scaleX: number, scaleY: number, centerX: number, centerY: number) {\r\n            var scaleAtMatrix = new Matrix(scaleX, 0.0, 0.0, scaleY, centerX - (scaleX * centerX), centerY - (scaleY * centerY));\r\n            Matrix.multiplyRefMatrix(this, scaleAtMatrix);\r\n        }\r\n\r\n        public skew(skewX: number, skewY: number) {\r\n            skewX = (skewX % 360.0) * 0.017453292519943295;\r\n            skewY = (skewY % 360.0) * 0.017453292519943295;\r\n            var skewMatrix = new Matrix(1.0, Math.tan(skewY), Math.tan(skewX), 1.0, 0.0, 0.0);\r\n            Matrix.multiplyRefMatrix(this, skewMatrix);\r\n        }\r\n\r\n        public transformPoint(x: number, y: number) {\r\n            return this.multiplyPoint(x, y);\r\n        }\r\n\r\n        public transformRect(x: number, y: number, width: number, height: number) {\r\n            var endX = x + width;\r\n            var endY = y + height;\r\n            var start = this.multiplyPoint(x, y);\r\n            var end = this.multiplyPoint(endX, endY);\r\n            var lx, ly, lw, lh;\r\n            lx = start.x;\r\n            ly = start.y;\r\n            lw = end.x - lx;\r\n            lh = end.y - ly;\r\n            return { x: lx, y: ly, width: lw, height: lh };\r\n        }\r\n\r\n        public translate(offsetX: number, offsetY: number) {\r\n            this.offsetX += offsetX;\r\n            this.offsetY += offsetY;\r\n        }\r\n    }\r\n}","\r\nnamespace Cgx {\r\n\r\n    export interface LoopArgs {\r\n        instance: RenderLoop,\r\n        data: any,\r\n        deltaTime: number\r\n    }\r\n\r\n    export type LoopCallback = (args: LoopArgs) => void;\r\n\r\n    export class RenderLoop {\r\n\r\n        private _loopCallback: LoopCallback;\r\n        private _maxFps = 0;\r\n        private _isRunning = false;\r\n        private _loopArgs: LoopArgs = {\r\n            instance: this,\r\n            data: null,\r\n            deltaTime: 0\r\n        };\r\n\r\n        private _lastLoopTime: number;\r\n        private _renderTimeAccumulator = 0;\r\n        private _renderTimeInterval: number;\r\n        private _lastRenderDeltaTime = 0;\r\n        private _fpsCounter: FpsCounter;\r\n\r\n        private _animators: Animator[] = [];\r\n        private _animatorsToRemove: Animator[] = [];\r\n\r\n        constructor(loopCallback: LoopCallback) {\r\n\r\n            if (typeof loopCallback !== \"function\") {\r\n                throw new Error(\"missing loop callback\");\r\n            }\r\n            this._loopCallback = loopCallback;\r\n\r\n            this._fpsCounter = new FpsCounter();\r\n\r\n            this.computeTimeInterval();\r\n\r\n            this._lastLoopTime = Date.now();\r\n            requestAnimationFrame(this.onRenderFrame.bind(this));\r\n        }\r\n\r\n        private onRenderFrame(timeStamp: number) {\r\n\r\n            if (this._isRunning) {\r\n\r\n                if (!this._lastLoopTime) this._lastLoopTime = timeStamp;\r\n                var timeElapsed = timeStamp - this._lastLoopTime;\r\n                if (timeElapsed < 0) timeElapsed = 0;\r\n                this._lastLoopTime = timeStamp;\r\n\r\n                if (this._renderTimeInterval > 0) {\r\n\r\n                    this._renderTimeAccumulator += timeElapsed;\r\n\r\n                    if (this._renderTimeAccumulator >= this._renderTimeInterval) {\r\n                        this._renderTimeAccumulator -= this._renderTimeInterval;\r\n                        this._loopArgs.deltaTime = this._lastLoopTime - this._lastRenderDeltaTime;\r\n                        this._lastRenderDeltaTime = this._lastLoopTime;\r\n                        this._loopCallback(this._loopArgs);\r\n                        this._fpsCounter.notifyFrame(timeStamp);\r\n                        this.onAnimatorFrame(timeStamp);\r\n                    }\r\n                }\r\n                else {\r\n                    this._loopArgs.deltaTime = timeElapsed;\r\n                    this._loopCallback(this._loopArgs);\r\n                    this._fpsCounter.notifyFrame(timeStamp);\r\n                    this.onAnimatorFrame(timeStamp);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            requestAnimationFrame(this.onRenderFrame.bind(this));\r\n        }\r\n\r\n        private onAnimatorFrame(timeStamp: number) {\r\n            this._animators.forEach(a => {\r\n                a.notifyFrame(timeStamp);\r\n                if (a.isCompleted) {\r\n                    var i = this._animatorsToRemove.indexOf(a);\r\n                    if (i >= 0) {\r\n                        this._animatorsToRemove.splice(i, 1);\r\n                        this._animators.splice(this._animators.indexOf(a), 1);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        private computeTimeInterval() {\r\n            if (this._maxFps <= 0 || !Number.isFinite(this._maxFps)) {\r\n                this._renderTimeInterval = 0;\r\n            } else {\r\n                this._renderTimeInterval = 1000 / this._maxFps;\r\n            }\r\n        }\r\n\r\n\r\n        public get currentFps() { return this._fpsCounter.fps; }\r\n\r\n        public get maxFps() { return this._maxFps; }\r\n        public set maxFps(v: number) {\r\n            if (this._maxFps != v) {\r\n                this._maxFps = v;\r\n                this.computeTimeInterval();\r\n            }\r\n        }\r\n\r\n        public get data() { return this._loopArgs.data; }\r\n        public set data(v: number) {\r\n            this._loopArgs.data = v;\r\n        }\r\n\r\n        public get isRunning() { return this._isRunning; }\r\n\r\n\r\n        public start() {\r\n            this._isRunning = true;\r\n            this._fpsCounter.start();\r\n        }\r\n\r\n        public stop() {\r\n            this._isRunning = false;\r\n            this._fpsCounter.stop();\r\n        }\r\n\r\n        public animate(startValue: AnimatorValue, endValue: AnimatorValue, totalTime: number, easing: string, onValueCallback: (value: AnimatorValue) => void, onCompleted: () => void) {\r\n            var animator = this.createAnimator(\r\n                startValue, endValue, totalTime, easing,\r\n                onValueCallback,\r\n                onCompleted\r\n            );\r\n            this.addAnimator(animator, true);\r\n            animator.start();\r\n        }\r\n\r\n        public createAnimator(startValue: AnimatorValue, endValue: AnimatorValue, totalTime: number, easing: string, onValueCallback: (value: AnimatorValue) => void, onCompleted: () => void) {\r\n            return new Animator(\r\n                startValue, endValue, totalTime, Ease.getEasingFunctionOrDefault(easing),\r\n                onValueCallback,\r\n                onCompleted\r\n            );\r\n        }\r\n\r\n        public addAnimator(animator: Animator, autoRemoveOnCompleted: boolean) {\r\n            if (this._animators.indexOf(animator) === -1) {\r\n                this._animators.push(animator);\r\n                if (autoRemoveOnCompleted) {\r\n                    this._animatorsToRemove.push(animator);\r\n                }\r\n                return this._animators.length - 1;\r\n            }\r\n            return -1;\r\n        }\r\n\r\n        public removeAnimator(animator: Animator) {\r\n            var index = this._animatorsToRemove.indexOf(animator);\r\n            if (index >= 0) {\r\n                this._animatorsToRemove.splice(index, 1);\r\n            }\r\n\r\n            index = this._animators.indexOf(animator);\r\n            if (index >= 0) {\r\n                this._animators.splice(index, 1);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n}","\r\nnamespace Cgx {\r\n\r\n    export namespace Shapes {\r\n\r\n        interface StrokeShape {\r\n            strokeBrush: BrushDefinition;\r\n            strokeWidth: number;\r\n        }\r\n        interface FillShape {\r\n            fillBrush: BrushDefinition;\r\n        }\r\n\r\n        const isFillShape = (type: any): type is FillShape => \r\n            (type as FillShape).fillBrush !== undefined;\r\n\r\n        const isStrokeShape = (type: any): type is StrokeShape => \r\n            (type as StrokeShape).strokeBrush !== undefined &&\r\n            (type as StrokeShape).strokeWidth !== undefined;\r\n\r\n        \r\n\r\n        export abstract class Shape {\r\n\r\n            public shadow?: Shadow = null;\r\n            public transform?: Transform = null;\r\n\r\n            protected abstract onRender(gfx: CoreGraphics): void;\r\n\r\n            public render(gfx: CoreGraphics) {\r\n\r\n                const currentFill = gfx.fillBrush;\r\n                let hasFill = false;\r\n                if (isFillShape(this) && this.fillBrush) {\r\n                    hasFill = true;\r\n                    gfx.fillBrush = this.fillBrush;\r\n                }\r\n\r\n                const currentStroke = gfx.strokeBrush;\r\n                const currentStrokeWidth = gfx.strokeWidth;\r\n                let hasStroke = false;\r\n                let hasStrokeWidth = false;\r\n                if (isStrokeShape(this)) {\r\n                    if (this.strokeBrush) {\r\n                        gfx.strokeBrush = this.strokeBrush;\r\n                        hasStroke = true;\r\n                    }\r\n                    if (this.strokeWidth !== undefined) {\r\n                        gfx.strokeWidth = this.strokeWidth;\r\n                        hasStrokeWidth = true;\r\n                    }\r\n                }\r\n\r\n                const currentShadow = gfx.shadow;\r\n                if (this.shadow) {\r\n                    gfx.shadow = this.shadow;\r\n                }\r\n\r\n                this.onRender(gfx);\r\n\r\n                if (this.shadow) {\r\n                    gfx.shadow = currentShadow;\r\n                }\r\n                if (hasFill) {\r\n                    gfx.fillBrush = currentFill;\r\n                }\r\n                if (hasStroke) {\r\n                    gfx.strokeBrush = currentStroke;\r\n                }\r\n                if (hasStrokeWidth) {\r\n                    gfx.strokeWidth = currentStrokeWidth;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        export class Arc extends Shape implements StrokeShape {\r\n\r\n            public static fromGeometry(geometry: ArcGeometry, strokeBrush?: BrushDefinition, strokeWidth?: number) {\r\n                const result = new Arc();\r\n                result.centerPoint = geometry.centerPoint;\r\n                result.radius = geometry.radius;\r\n                result.startAngle = geometry.startAngle;\r\n                result.endAngle = geometry.endAngle;\r\n                result.isAntiClockwise = geometry.isAntiClockwise;\r\n\r\n                if (strokeWidth !== undefined) {\r\n                    result.strokeWidth = strokeWidth;\r\n                }\r\n\r\n                if (strokeBrush !== undefined) {\r\n                    result.strokeBrush = strokeBrush;\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            public strokeBrush: BrushDefinition;\r\n            public strokeWidth: number;\r\n\r\n            public centerPoint: Point = createPoint();\r\n            public radius: number = 0;\r\n            public startAngle: number = 0;\r\n            public endAngle: number = 0;\r\n            public isAntiClockwise: boolean;\r\n\r\n            protected onRender(gfx: CoreGraphics): void {\r\n                gfx.drawArc(\r\n                    this.centerPoint.x,\r\n                    this.centerPoint.y,\r\n                    this.radius,\r\n                    this.startAngle,\r\n                    this.endAngle,\r\n                    this.isAntiClockwise,\r\n                    this.transform\r\n                );\r\n            }\r\n        }\r\n\r\n        export class Line extends Shape implements StrokeShape {\r\n\r\n            public static fromGeometry(geometry: LineGeometry, strokeBrush?: BrushDefinition, strokeWidth?: number) {\r\n                const result = new Line();\r\n                result.startPoint = geometry.startPoint;\r\n                result.endPoint = geometry.endPoint;\r\n\r\n                if (strokeWidth !== undefined) {\r\n                    result.strokeWidth = strokeWidth;\r\n                }\r\n\r\n                if (strokeBrush !== undefined) {\r\n                    result.strokeBrush = strokeBrush;\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            public strokeBrush: BrushDefinition;\r\n            public strokeWidth: number;\r\n\r\n            public startPoint: Point = createPoint();\r\n            public endPoint: Point = createPoint();\r\n\r\n            protected onRender(gfx: CoreGraphics): void {\r\n                gfx.drawLine(\r\n                    this.startPoint.x,\r\n                    this.startPoint.y,\r\n                    this.endPoint.x,\r\n                    this.endPoint.y,\r\n                    this.transform\r\n                );\r\n            }\r\n        }\r\n\r\n        export class Rectangle extends Shape implements StrokeShape, FillShape {\r\n\r\n            public static fromGeometry(geometry: RectangleGeometry, strokeBrush?: BrushDefinition, strokeWidth?: number, fillBrush?: BrushDefinition) {\r\n                const result = new Rectangle();\r\n                result.origin = geometry.origin;\r\n                result.width = geometry.width;\r\n                result.height = geometry.height;\r\n\r\n                if (strokeWidth !== undefined) {\r\n                    result.strokeWidth = strokeWidth;\r\n                }\r\n\r\n                if (strokeBrush !== undefined) {\r\n                    result.strokeBrush = strokeBrush;\r\n                }\r\n\r\n                if (fillBrush !== undefined) {\r\n                    result.fillBrush = fillBrush;\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            public fillBrush: BrushDefinition;\r\n            public strokeBrush: BrushDefinition;\r\n            public strokeWidth: number;\r\n\r\n            public origin: Point = createPoint();\r\n            public width: number;\r\n            public height: number;\r\n            public cornerRadius: CornersRadiusDefinition;\r\n\r\n            protected onRender(gfx: CoreGraphics): void {\r\n                gfx.drawRoundedRectangle(\r\n                    this.origin.x,\r\n                    this.origin.y,\r\n                    this.width,\r\n                    this.height,\r\n                    this.cornerRadius,\r\n                    this.transform\r\n                );\r\n            }\r\n        }\r\n\r\n        export class Ellipse extends Shape implements StrokeShape, FillShape {\r\n\r\n\t\t\tpublic static fromGeometry(geometry: EllipseGeometry, strokeBrush?: BrushDefinition, strokeWidth?: number, fillBrush?: BrushDefinition) {\r\n                const result = new Ellipse();\r\n                result.centerPoint = geometry.centerPoint;\r\n                result.radiusX = geometry.radiusX;\r\n                result.radiusY = geometry.radiusY;\r\n\r\n                if (strokeWidth !== undefined) {\r\n                    result.strokeWidth = strokeWidth;\r\n                }\r\n\r\n                if (strokeBrush !== undefined) {\r\n                    result.strokeBrush = strokeBrush;\r\n                }\r\n\r\n                if (fillBrush !== undefined) {\r\n                    result.fillBrush = fillBrush;\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            public fillBrush: BrushDefinition;\r\n            public strokeBrush: BrushDefinition;\r\n            public strokeWidth: number;\r\n\r\n            public centerPoint: Point = createPoint();\r\n            public radiusX: number = 0;\r\n            public radiusY: number = 0;\r\n\r\n            protected onRender(gfx: CoreGraphics): void {\r\n                gfx.drawEllipse(\r\n                    this.centerPoint.x,\r\n                    this.centerPoint.y,\r\n                    this.radiusX,\r\n                    this.radiusY,\r\n                    this.transform\r\n                );\r\n            }\r\n        }\r\n\r\n        export class Polygonal extends Shape implements StrokeShape, FillShape {\r\n\r\n\t\t\tpublic static fromGeometry(geometry: PolygonalGeometry, strokeBrush?: BrushDefinition, strokeWidth?: number, fillBrush?: BrushDefinition) {\r\n                const result = new Polygonal();\r\n                result.isClosed = geometry.isClosed;\r\n                result.points = geometry.points;\r\n\r\n                if (strokeWidth !== undefined) {\r\n                    result.strokeWidth = strokeWidth;\r\n                }\r\n\r\n                if (strokeBrush !== undefined) {\r\n                    result.strokeBrush = strokeBrush;\r\n                }\r\n\r\n                if (fillBrush !== undefined) {\r\n                    result.fillBrush = fillBrush;\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            public fillBrush: BrushDefinition;\r\n            public strokeBrush: BrushDefinition;\r\n            public strokeWidth: number;\r\n\r\n            public points: Point[] = new Array<Point>();\r\n            public isClosed: boolean;\r\n\r\n            protected onRender(gfx: CoreGraphics): void {\r\n                if (this.isClosed) {\r\n                    gfx.drawPolygon(\r\n                        this.points,\r\n                        this.transform\r\n                    );\r\n                } else {\r\n                    gfx.drawPolyline(\r\n                        this.points,\r\n                        this.transform\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        export class QuadraticCurve extends Shape implements StrokeShape, FillShape {\r\n\r\n\t\t\tpublic static fromGeometry(geometry: QuadraticCurveGeometry, strokeBrush?: BrushDefinition, strokeWidth?: number, fillBrush?: BrushDefinition) {\r\n                const result = new QuadraticCurve();\r\n                result.isClosed = geometry.isClosed;\r\n                result.points = geometry.points;\r\n\t\t\t\tresult.controlPoints = geometry.controlPoints;\r\n\r\n                if (strokeWidth !== undefined) {\r\n                    result.strokeWidth = strokeWidth;\r\n                }\r\n\r\n                if (strokeBrush !== undefined) {\r\n                    result.strokeBrush = strokeBrush;\r\n                }\r\n\r\n                if (fillBrush !== undefined) {\r\n                    result.fillBrush = fillBrush;\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            public fillBrush: BrushDefinition;\r\n            public strokeBrush: BrushDefinition;\r\n            public strokeWidth: number;\r\n\r\n            public points: Point[] = new Array<Point>();\r\n            public controlPoints: Point[] = new Array<Point>();\r\n            public isClosed: boolean;\r\n\r\n            protected onRender(gfx: CoreGraphics): void {\r\n                gfx.drawQuadraticCurve(\r\n                    this.points,\r\n                    this.controlPoints,\r\n                    this.isClosed,\r\n                    this.transform\r\n                );\r\n            }\r\n        }\r\n\r\n        export class CubicCurve extends Shape implements StrokeShape, FillShape {\r\n\r\n\t\t\tpublic static fromGeometry(geometry: CubicCurveGeometry, strokeBrush?: BrushDefinition, strokeWidth?: number, fillBrush?: BrushDefinition) {\r\n                const result = new CubicCurve();\r\n                result.isClosed = geometry.isClosed;\r\n                result.points = geometry.points;\r\n\t\t\t\tresult.controlPoints1 = geometry.controlPoints1;\r\n\t\t\t\tresult.controlPoints2 = geometry.controlPoints2;\r\n\r\n                if (strokeWidth !== undefined) {\r\n                    result.strokeWidth = strokeWidth;\r\n                }\r\n\r\n                if (strokeBrush !== undefined) {\r\n                    result.strokeBrush = strokeBrush;\r\n                }\r\n\r\n                if (fillBrush !== undefined) {\r\n                    result.fillBrush = fillBrush;\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            public fillBrush: BrushDefinition;\r\n            public strokeBrush: BrushDefinition;\r\n            public strokeWidth: number;\r\n\r\n            public points: Point[] = new Array<Point>();\r\n            public controlPoints1: Point[] = new Array<Point>();\r\n            public controlPoints2: Point[] = new Array<Point>();\r\n            public isClosed: boolean;\r\n\r\n            protected onRender(gfx: CoreGraphics): void {\r\n                gfx.drawCubicCurve(\r\n                    this.points,\r\n                    this.controlPoints1,\r\n                    this.controlPoints2,\r\n                    this.isClosed,\r\n                    this.transform\r\n                );\r\n            }\r\n        }\r\n\r\n        export class Image extends Shape implements StrokeShape {\r\n\r\n            public static fromGeometry(geometry: ImageGeometry, strokeBrush?: BrushDefinition, strokeWidth?: number) {\r\n                const result = new Image();\r\n                result.origin = geometry.origin;\r\n                result.width = geometry.width;\r\n                result.height = geometry.height;\r\n\r\n                if (strokeWidth !== undefined) {\r\n                    result.strokeWidth = strokeWidth;\r\n                }\r\n\r\n                if (strokeBrush !== undefined) {\r\n                    result.strokeBrush = strokeBrush;\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            public fillBrush: BrushDefinition;\r\n            public strokeBrush: BrushDefinition;\r\n            public strokeWidth: number;\r\n\r\n            public image: CanvasImageSource;\r\n            public origin: Point = createPoint();\r\n            public width: number;\r\n            public height: number;\r\n\r\n            protected onRender(gfx: CoreGraphics): void {\r\n                gfx.drawImage(\r\n                    this.image,\r\n                    this.origin.x,\r\n                    this.origin.y,\r\n                    this.width,\r\n                    this.height,\r\n                    this.transform\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        export class Text extends Shape implements StrokeShape, FillShape {\r\n\r\n\t\t\tpublic static fromGeometry(geometry: TextGeometry, strokeBrush?: BrushDefinition, strokeWidth?: number, fillBrush?: BrushDefinition) {\r\n                const result = new Text();\r\n                result.origin = geometry.origin;\r\n                result.text = geometry.text;\r\n\r\n                if (strokeWidth !== undefined) {\r\n                    result.strokeWidth = strokeWidth;\r\n                }\r\n\r\n                if (strokeBrush !== undefined) {\r\n                    result.strokeBrush = strokeBrush;\r\n                }\r\n\r\n\t\t\t\tif (fillBrush !== undefined) {\r\n                    result.fillBrush = fillBrush;\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            public fillBrush: BrushDefinition;\r\n            public strokeBrush: BrushDefinition;\r\n            public strokeWidth: number;\r\n\r\n            public text: string;\r\n            public origin: Point = createPoint();\r\n\r\n            protected onRender(gfx: CoreGraphics): void {\r\n                gfx.drawText(\r\n                    this.origin.x,\r\n                    this.origin.y,\r\n                    this.text,\r\n                    this.transform\r\n                );\r\n            }\r\n        }\r\n\r\n        export class Path extends Shape implements StrokeShape, FillShape {\r\n\r\n\t\t\tpublic static fromGeometry(geometry: PathGeometry, strokeBrush?: BrushDefinition, strokeWidth?: number, fillBrush?: BrushDefinition) {\r\n                const result = new Path();\r\n                result.origin = geometry.origin;\r\n                result.path = geometry.path;\r\n\t\t\t\tresult.fillRule = geometry.fillRule;\r\n\r\n                if (strokeWidth !== undefined) {\r\n                    result.strokeWidth = strokeWidth;\r\n                }\r\n\r\n                if (strokeBrush !== undefined) {\r\n                    result.strokeBrush = strokeBrush;\r\n                }\r\n\r\n\t\t\t\tif (fillBrush !== undefined) {\r\n                    result.fillBrush = fillBrush;\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            public fillBrush: BrushDefinition;\r\n            public strokeBrush: BrushDefinition;\r\n            public strokeWidth: number;\r\n\r\n            public path: Path2D;\r\n            public origin: Point = createPoint();\r\n            public fillRule?: CanvasFillRule;\r\n\r\n            protected onRender(gfx: CoreGraphics): void {\r\n                gfx.drawPath2D(\r\n                    this.origin.x,\r\n                    this.origin.y,\r\n                    this.path,\r\n                    this.fillRule,\r\n                    this.transform\r\n                );\r\n            }\r\n        }\r\n\r\n        export class Pie extends Shape implements StrokeShape, FillShape {\r\n\r\n            public static fromGeometry(geometry: ArcGeometry, strokeBrush?: BrushDefinition, strokeWidth?: number, fillBrush?: BrushDefinition) {\r\n\t\t\t\tconst result = new Pie();\r\n\t\t\t\tresult.centerPoint = geometry.centerPoint;\r\n\t\t\t\tresult.endAngle = geometry.endAngle;\r\n\t\t\t\tresult.isAntiClockwise = geometry.isAntiClockwise;\r\n\t\t\t\tresult.radius = geometry.radius;\r\n\t\t\t\tresult.startAngle = geometry.startAngle;\r\n\r\n\t\t\t\tif (strokeWidth !== undefined) {\r\n                    result.strokeWidth = strokeWidth;\r\n                }\r\n\r\n                if (strokeBrush !== undefined) {\r\n                    result.strokeBrush = strokeBrush;\r\n                }\r\n\r\n\t\t\t\tif (fillBrush !== undefined) {\r\n                    result.fillBrush = fillBrush;\r\n                }\r\n\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\r\n            public fillBrush: BrushDefinition;\r\n            public strokeBrush: BrushDefinition;\r\n            public strokeWidth: number;\r\n\r\n            public centerPoint: Point = createPoint();\r\n            public radius: number = 0;\r\n            public startAngle: number = 0;\r\n            public endAngle: number = 0;\r\n            public isAntiClockwise: boolean;\r\n\r\n            protected onRender(gfx: CoreGraphics): void {\r\n                gfx.drawPie(\r\n                    this.centerPoint.x,\r\n                    this.centerPoint.y,\r\n                    this.radius,\r\n                    this.startAngle,\r\n                    this.endAngle,\r\n                    this.isAntiClockwise,\r\n                    this.transform\r\n                );\r\n            }\r\n        }\r\n\r\n        export class Donut extends Shape implements StrokeShape, FillShape {\r\n\r\n\t\t\tpublic static fromGeometry(geometry: DonutGeometry, strokeBrush?: BrushDefinition, strokeWidth?: number, fillBrush?: BrushDefinition) {\r\n\t\t\t\tconst result = new Donut();\r\n\t\t\t\tresult.centerPoint = geometry.centerPoint;\r\n\t\t\t\tresult.endAngle = geometry.endAngle;\r\n\t\t\t\tresult.endRadius = geometry.endRadius;\r\n\t\t\t\tresult.isAntiClockwise = geometry.isAntiClockwise;\r\n\t\t\t\tresult.startAngle = geometry.startAngle;\r\n\t\t\t\tresult.startRadius = geometry.startRadius;\r\n\r\n\t\t\t\tif (strokeWidth !== undefined) {\r\n                    result.strokeWidth = strokeWidth;\r\n                }\r\n\r\n                if (strokeBrush !== undefined) {\r\n                    result.strokeBrush = strokeBrush;\r\n                }\r\n\r\n\t\t\t\tif (fillBrush !== undefined) {\r\n                    result.fillBrush = fillBrush;\r\n                }\r\n\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\r\n            public fillBrush: BrushDefinition;\r\n            public strokeBrush: BrushDefinition;\r\n            public strokeWidth: number;\r\n\r\n            public centerPoint: Point = createPoint();\r\n            public startRadius: number = 0;\r\n            public endRadius: number = 0;\r\n            public startAngle: number = 0;\r\n            public endAngle: number = 0;\r\n            public isAntiClockwise?: boolean;\r\n\r\n\r\n            protected onRender(gfx: CoreGraphics): void {\r\n                gfx.drawDonut(\r\n                    this.centerPoint.x,\r\n                    this.centerPoint.y,\r\n                    this.startRadius,\r\n                    this.endRadius,\r\n                    this.startAngle,\r\n                    this.endAngle,\r\n                    this.isAntiClockwise,\r\n                    this.transform\r\n                );\r\n            }\r\n        }\r\n    }\r\n}","\r\nnamespace Cgx {\r\n\r\n    export class Transform implements ITransform {\r\n\r\n        private _matrix: Matrix;\r\n        private _isDirty = true;\r\n        private _originX = 0.0;\r\n        private _originY = 0.0;\r\n        private _translationX = 0.0;\r\n        private _translationY = 0.0;\r\n        private _scaleX = 1.0;\r\n        private _scaleY = 1.0;\r\n        private _rotation = 0.0;\r\n\r\n\r\n        protected _propertyChanged: (propertyName: string) => void = (p) => { };\r\n\r\n\r\n        public get originX() {\r\n            return this._originX;\r\n        }\r\n        public set originX(v: number) {\r\n            if (typeof v === \"number\") {\r\n                if (this._originX !== v) {\r\n                    this._originX = v;\r\n                    this._isDirty = true;\r\n                    this._propertyChanged(\"originX\");\r\n                }\r\n            }\r\n        }\r\n\r\n        public get originY() {\r\n            return this._originY;\r\n        }\r\n        public set originY(v: number) {\r\n            if (typeof v === \"number\") {\r\n                if (this._originY !== v) {\r\n                    this._originY = v;\r\n                    this._isDirty = true;\r\n                    this._propertyChanged(\"originY\");\r\n                }\r\n            }\r\n        }\r\n\r\n        public get translationX() {\r\n            return this._translationX;\r\n        }\r\n        public set translationX(v: number) {\r\n            if (typeof v === \"number\") {\r\n                if (this._translationX !== v) {\r\n                    this._translationX = v;\r\n                    this._isDirty = true;\r\n                    this._propertyChanged(\"translationX\");\r\n                }\r\n            }\r\n        }\r\n\r\n        public get translationY() {\r\n            return this._translationY;\r\n        }\r\n        public set translationY(v: number) {\r\n            if (typeof v === \"number\") {\r\n                if (this._translationY !== v) {\r\n                    this._translationY = v;\r\n                    this._isDirty = true;\r\n                    this._propertyChanged(\"translationY\");\r\n                }\r\n            }\r\n        }\r\n\r\n        public get scaleX() {\r\n            return this._scaleX;\r\n        }\r\n        public set scaleX(v: number) {\r\n            if (typeof v === \"number\") {\r\n                if (this._scaleX !== v) {\r\n                    this._scaleX = v;\r\n                    this._isDirty = true;\r\n                    this._propertyChanged(\"scaleX\");\r\n                }\r\n            }\r\n        }\r\n\r\n        public get scaleY() {\r\n            return this._scaleY;\r\n        }\r\n        public set scaleY(v: number) {\r\n            if (typeof v === \"number\") {\r\n                if (this._scaleY !== v) {\r\n                    this._scaleY = v;\r\n                    this._isDirty = true;\r\n                    this._propertyChanged(\"scaleY\");\r\n                }\r\n            }\r\n        }\r\n\r\n        public get rotation() {\r\n            return this._rotation;\r\n        }\r\n        public set rotation(v: number) {\r\n            if (typeof v === \"number\") {\r\n                if (this._rotation !== v) {\r\n                    this._rotation = v;\r\n                    this._isDirty = true;\r\n                    this._propertyChanged(\"rotation\");\r\n                }\r\n            }\r\n        }\r\n\r\n        public get isIdentity() {\r\n            if (this._translationX == 0 && this._translationY == 0) {\r\n                if (this._scaleX == 1 && this._scaleY == 1) {\r\n                    if (this._rotation == 0) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        public getMatrix() {\r\n            if (this._matrix == null || this._isDirty) {\r\n                this._matrix = new Matrix();\r\n                this._matrix.translate(this.translationX, this.translationY);\r\n                this._matrix.rotate(this.rotation);\r\n                this._matrix.scale(this.scaleX, this.scaleY);\r\n            }\r\n            return this._matrix;\r\n        }\r\n\r\n        public reset() {\r\n            this._originX = 0.0;\r\n            this._originY = 0.0;\r\n            this._translationX = 0.0;\r\n            this._translationY = 0.0;\r\n            this._scaleX = 1.0;\r\n            this._scaleY = 1.0;\r\n            this._rotation = 0.0;\r\n            this._matrix = null;\r\n        }\r\n\r\n        public setDirty() {\r\n            this._isDirty = true;\r\n        }\r\n\r\n        public transformPoint(x: number, y: number) {\r\n            return this.getMatrix().transformPoint(x, y);\r\n        }\r\n\r\n        public transformRect(x: number, y: number, width: number, height: number) {\r\n            return this.getMatrix().transformRect(x, y, width, height);\r\n        }\r\n    }\r\n}","\r\nnamespace Cgx {\r\n\r\n    export interface ITransform {\r\n        getMatrix(): Matrix;\r\n    }\r\n\r\n    export class TransformManager {\r\n\r\n        private _transforms: ITransform[];\r\n        private _renderer: GraphicsRenderer;\r\n\r\n        constructor(renderer: GraphicsRenderer) {\r\n            this._transforms = [];\r\n            this._renderer = renderer;\r\n        }\r\n\r\n        public push(transform: ITransform) {\r\n            var mtx = transform.getMatrix();\r\n            this._transforms.push(transform);\r\n            this._renderer.saveState();\r\n            this._renderer.transform(mtx.m11, mtx.m12, mtx.m21, mtx.m22, mtx.offsetX, mtx.offsetY);\r\n        }\r\n\r\n        public pop() {\r\n            var result = this._transforms.push();\r\n            this._renderer.restoreState();\r\n            return result;\r\n        }\r\n\r\n        public get length() {\r\n            return this._transforms.length;\r\n        }\r\n    }\r\n}","\r\nnamespace Cgx {\r\n\r\n    export function createPoint(x = 0, y = 0){\r\n        return { x, y };\r\n    }\r\n}","\r\nnamespace Cgx {\r\n\r\n    export interface WebGLRendererSupport extends GraphicsRendererSupport {\r\n        // TODO\r\n    }\r\n\r\n    export class WebGLRenderer extends GraphicsRenderer {\r\n\r\n        public static readonly support: WebGLRendererSupport = (() => {\r\n            return {\r\n                // TODO\r\n            };\r\n        })();\r\n\r\n        private _context: WebGLRenderingContext;\r\n\r\n        constructor(canvas: HTMLCanvasElement) {\r\n            super(canvas);\r\n            this._context = canvas.getContext(\"webgl\");\r\n            this.setDefaultValues();\r\n        }\r\n\r\n        private setDefaultValues() {\r\n            this.globalAlpha = GraphicsRenderer.defaultValues.globalAlpha;\r\n            this.globalCompositeOperation = GraphicsRenderer.defaultValues.globalCompositeOperation;\r\n            this.fillStyle = GraphicsRenderer.defaultValues.fillStyle;\r\n            this.strokeStyle = GraphicsRenderer.defaultValues.strokeStyle;\r\n            this.shadowBlur = GraphicsRenderer.defaultValues.shadowBlur;\r\n            this.shadowColor = GraphicsRenderer.defaultValues.shadowColor;\r\n            this.shadowOffsetX = GraphicsRenderer.defaultValues.shadowOffsetX;\r\n            this.shadowOffsetY = GraphicsRenderer.defaultValues.shadowOffsetY;\r\n            this.lineCap = GraphicsRenderer.defaultValues.lineCap;\r\n            this.lineJoin = GraphicsRenderer.defaultValues.lineJoin;\r\n            this.lineWidth = GraphicsRenderer.defaultValues.lineWidth;\r\n            this.miterLimit = GraphicsRenderer.defaultValues.miterLimit;\r\n            this.lineDashOffset = GraphicsRenderer.defaultValues.lineDashOffset;\r\n            this.textLineHeight = GraphicsRenderer.defaultValues.textLineHeight;\r\n            this.fontStyle = GraphicsRenderer.defaultValues.fontStyle;\r\n            this.fontWeight = GraphicsRenderer.defaultValues.fontWeight;\r\n            this.fontSize = GraphicsRenderer.defaultValues.fontSize;\r\n            this.fontFamily = GraphicsRenderer.defaultValues.fontFamily;\r\n            this.textAlign = GraphicsRenderer.defaultValues.textAlign;\r\n            this.textBaseline = GraphicsRenderer.defaultValues.textBaseline;\r\n            this.direction = GraphicsRenderer.defaultValues.direction;\r\n            this.imageSmoothingEnabled = GraphicsRenderer.defaultValues.imageSmoothingEnabled;\r\n        }\r\n\r\n        public readonly name = \"WebGLRenderer\";\r\n\r\n        public globalAlpha: number;\r\n        public globalCompositeOperation: string;\r\n        public fillStyle: RendererBrush;\r\n        public strokeStyle: RendererBrush;\r\n        public shadowBlur: number;\r\n        public shadowColor: string;\r\n        public shadowOffsetX: number;\r\n        public shadowOffsetY: number;\r\n        public createLinearGradient(x0: number, y0: number, x1: number, y1: number): CanvasGradient {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): CanvasGradient {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public createPattern(image: CanvasImageSource, repetition: string): CanvasPattern {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public lineCap: CanvasLineCap;\r\n        public lineJoin: CanvasLineJoin;\r\n        public lineWidth: number;\r\n        public miterLimit: number;\r\n        public lineDashOffset: number;\r\n        public getLineDash(): number[] {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public setLineDash(segments: Iterable<number>): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public textLineHeight: string;\r\n        public fontStyle: string;\r\n        public fontWeight: string;\r\n        public fontSize: string;\r\n        public fontFamily: string;\r\n        public textAlign: CanvasTextAlign;\r\n        public textBaseline: CanvasTextBaseline;\r\n        public direction: CanvasDirection;\r\n        public saveState(): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public restoreState(): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public toDataURL(type?: string, quality?: any): string {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public clearRect(x: number, y: number, width: number, height: number, fillStyle?: RendererBrush): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public strokeRect(x: number, y: number, width: number, height: number): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public fillRect(x: number, y: number, width: number, height: number): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public stroke(): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public fill(fillRule?: CanvasFillRule): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public strokePath2D(path2D: Path2D): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public fillPath2D(path2D: Path2D, fillRule?: CanvasFillRule): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public clip(): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public rect(x: number, y: number, width: number, height: number): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public square(x: number, y: number, size: number): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public ellipse(x: number, y: number, rx: number, ry: number, rotation?: number, startAngle?: number, endAngle?: number): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public circle(x: number, y: number, r: number): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public arc(x: number, y: number, r: number, rotation: number, startAngle: number, endAngle: number, anticlockwise?: boolean): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public beginPath(): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public closePath(): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public moveTo(x: number, y: number): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public lineTo(x: number, y: number): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public bezierCurveTo(c1x: number, c1y: number, c2x: number, c2y: number, x: number, y: number): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public quadraticCurveTo(cx: number, cy: number, x: number, y: number): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public isPointInPath(x: number, y: number, fillRule?: CanvasFillRule): boolean {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public isPointInPath2D(path2D: Path2D, x: number, y: number, fillRule?: CanvasFillRule): boolean {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public isPointInStroke(x: number, y: number): boolean {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public isPointInPath2DStroke(path2D: Path2D, x: number, y: number): boolean {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public addHitRegion(options?: any): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public removeHitRegion(id: string): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public clearHitRegions(): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public drawImage(img: CanvasImageSource, dx: number, dy: number, dw?: number, dh?: number, sx?: number, sy?: number, sw?: number, sh?: number): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public createImageData(width: number, height: number): ImageData {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public cloneImageData(imageData: ImageData): ImageData {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public getImageData(sx: number, sy: number, sw: number, sh: number): ImageData {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public putImageData(imageData: ImageData, x: number, y: number): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public imageSmoothingEnabled: boolean;\r\n        public fillText(text: string, x: number, y: number, maxWidth?: number): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public strokeText(text: string, x: number, y: number, maxWidth?: number): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public measureText(text: string): TextMetrics {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public rotate(angle: number): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public translate(dx: number, dy: number): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public scale(x: number, y: number): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public transform(a: number, b: number, c: number, d: number, e: number, f: number): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public setTransform(a: number, b: number, c: number, d: number, e: number, f: number): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public resetTransform(): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        public drawFocusIfNeeded(element: Element): void {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n\r\n\r\n    }\r\n}"]}